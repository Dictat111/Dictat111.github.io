<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>本地音乐测试</title>
      <link href="/2024/01/31/2024%E5%B9%B41%E6%9C%8831%E6%97%A5-%E6%9C%AC%E5%9C%B0%E9%9F%B3%E4%B9%90%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/01/31/2024%E5%B9%B41%E6%9C%8831%E6%97%A5-%E6%9C%AC%E5%9C%B0%E9%9F%B3%E4%B9%90%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本次测试使用了 <code>hexo-tag-aplayer</code> 插件的本地引用功能<br>用代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;忍者&quot; &quot;周杰伦&quot; &quot;周杰伦 - 忍者.mp3&quot; %&#125;</span><br><span class="line">&#123;% aplayer &quot;駅&quot; &quot;中森明菜&quot; &quot;駅 - 中森明菜.mp3&quot; &quot;autoplay&quot;%&#125;</span><br></pre></td></tr></table></figure><br>实现了下面的效果,文件放在了和 <code>md</code> 同名的文件夹下面,这是因为我开起了<a href="https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9">文章资源文件夹</a>功能.</p>        <div id="aplayer-nQhvgMvP" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-nQhvgMvP"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "忍者",              author: "周杰伦",              url: "周杰伦 - 忍者.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>        <div id="aplayer-bgbIlXQo" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-bgbIlXQo"),            narrow: false,            autoplay: true,            showlrc: false,            music: {              title: "駅",              author: "中森明菜",              url: "駅 - 中森明菜.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给主题添加音乐播放器</title>
      <link href="/2024/01/30/2024%E5%B9%B41%E6%9C%8830%E6%97%A5-%E7%BB%99%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
      <url>/2024/01/30/2024%E5%B9%B41%E6%9C%8830%E6%97%A5-%E7%BB%99%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本质上就是使用 <code>hexo-tag-aplayer</code>这个插件,多参考了几个人的文章,实现了下面的效果.</p>    <div id="aplayer-cKfufdmx" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="798130521" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="400px" data-preload="none" data-theme="#ad7a86"    ></div><p>据说能够使用butterfly来实现下吸播放,但是没有试.<br>下面是单曲,用的 <code>song</code> 关键字<br>    <div id="aplayer-pCwMnhkc" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="443700749" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="400px" data-preload="none" data-theme="#ad7a86"    ></div></p><p><a href="https://www.guodongblog.com/posts/91597d56b19f/">参考-Hexo-Butterfly音乐播放器的添加</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年1月30日-使用imgur图床</title>
      <link href="/2024/01/30/2024%E5%B9%B41%E6%9C%8830%E6%97%A5-%E4%BD%BF%E7%94%A8imgur%E5%9B%BE%E5%BA%8A/"/>
      <url>/2024/01/30/2024%E5%B9%B41%E6%9C%8830%E6%97%A5-%E4%BD%BF%E7%94%A8imgur%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本地的图片容易被无意间的删除,因此需要用网络来暂时存储,用了<code>imgur</code>,是一个外国的网站,所以访问速度可能不是很快.</p><p><blockquote class="imgur-embed-pub" lang="en" data-id="a/JR5muSX" data-context="false" ><a href="//imgur.com/a/JR5muSX"></a></blockquote><script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script><br>随便找了电脑上的三张图片试了一下,发现好像并不能直接用<code>url</code>来引用,只能用特定的方式来嵌入引用.</p><p> <blockquote class="imgur-embed-pub" lang="en" data-id="qJ1d0EW"><a href="https://imgur.com/qJ1d0EW">View post on imgur.com</a></blockquote><script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script><br>当然也能只嵌入一张图片.</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-随记</title>
      <link href="/2024/01/25/hexo-%E9%9A%8F%E8%AE%B0/"/>
      <url>/2024/01/25/hexo-%E9%9A%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="2024年1月25日"><a href="#2024年1月25日" class="headerlink" title="2024年1月25日"></a>2024年1月25日</h2><p>最近的一件事情就是用的 <code>tachiyomi</code> 这个软件好像因为触犯了某个韩国公司的利益,然后就被投诉了,在 <code>github</code> 上面好像已经清了仓库.这是一个另人痛心棘手的事情,毕竟我才用这个软件有一点起色了.但好在天无绝人之路,只是清楚了插件的仓库,而这部分的工作已经另有一批人着手了.</p><p>昨天我看了那 <code>b站</code> 上工地里干活一天能挣一千八的事情,恍惚间竟然产生了和这个开源软件有一点交际的想法.</p><p>我觉得这样的软件总归是少数人的玩具,虽然开源精神是值得钦佩的,知识共享,十分的不错.但是这些东西很难对这个世界产生物质上的影响,对比建筑工人,程序员似乎并没有创造出什么实际的东西来.<br><code>tachiyomi</code>这种的软件,本质上也是一种爬虫,来剽用他人的服务器资源而已,如果有一天能源能够无限了,估计到了那个时候,这种开源的精神才能对这个世界产生更多的影响吧.但是到现在为止,太多的工作依然需要人力来完成,或者需要能源,对虚拟世界的控制,还没有很好地转移到现实世界来.</p><h1 id="2024年1月27日"><a href="#2024年1月27日" class="headerlink" title="2024年1月27日"></a>2024年1月27日</h1><p>今天又是出去玩的一天.</p><p>陪同学去了红山动物园,然后去了玄武湖,最后去了新街口.</p><p>早上的红山动物园,怎么说呢,因为是冬天的缘故,所以在园里的动物大多处于冬眠的状态,只能说是一场十分失望的参观.中午的玄武湖也去的不是时候,没有看到芳草鲜美落英缤纷,只看的了秋风萧瑟洪波涌起.</p><p>最后在新街口去的才是最符合我的胃口的.原来说的是去老门东的,但是上次去的就是那个地方,感觉这样的庙会实在是没有啥好逛的地方,立即便被我给否决了.新街口里有一个苏宁易购的线下商场,而里面有索尼电视机,要知道,这索尼的专柜实在是不多见的,机不可失.</p><p>一楼的商城卖的是电脑,我感觉16寸的小新笔记本掂量在手里的时候还是有点重的.</p><p>二楼的电视机是重点.</p><p>虽然时间以前过去很多年,但是在老电影里的那种场景,一个人在摆放电视机的橱窗外面呆呆地看着电视的场景,还是会出现在现实里面.看了华为的电视机,感觉还是很惊艳的,遥控器实现了电脑鼠标的功能,而且鸿蒙生态能够实现在电视上使用手机软件,例如短视频软件.但是这样的功能其实并不是很戳我,因为这完全能够用一些特殊的方法来实现,我喜欢折腾,却也不喜欢玩手机,即使要折腾手机软件,也不过是开源的那些,我不觉得鸿蒙能够有我想要的开源生态.</p><p>看了索尼电视柜台.</p><p>我才开始的时候甚至都没有意识到这是索尼的电视机,怎么说呢,当时同学正在使用国产的音乐软件进行播放,那画面只能用灾难来形容,但是在询问了店员之后,掏出了ps5的手柄,接下来的体验就回归经验了.只能说这电视对国产软件的适配实在是垃圾,也就是说那画质完全是没有达到屏幕的适配的,这种情况其实在高分辨率的win10电脑上也能够体现,有些软件不适配,看起来很糊.听说能够安装奈飞,这也是一个有点.</p><p>人的欲望总是无穷的,虽然知道55寸的电视机已经足够,但是呆坐在那硕大的85寸屏前面,未免也有点想要抱回家的冲动,但是口袋空空,所以想法只能作空.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代理那些事-又一次网络修复</title>
      <link href="/2024/01/25/2024-01-25-%E5%8F%88%E4%B8%80%E6%AC%A1%E7%BD%91%E7%BB%9C%E4%BF%AE%E5%A4%8D/"/>
      <url>/2024/01/25/2024-01-25-%E5%8F%88%E4%B8%80%E6%AC%A1%E7%BD%91%E7%BB%9C%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>兄弟们,用 <code>hexo</code> 又出问题了, 用 <code>hexo clean &amp; hexo g &amp; hexo d</code> 一键三连的时候,最后一步部署的时候出问题了,最后排查出来发现是该死的学校学院网不能够访问 <code>GitHub</code> 了.<sup><a href="#fn_1" id="reffn_1">1</a></sup></p><p>我希望能给 <code>cmd</code> 上代理,但是发现怎么用都不 <code>ping</code> 不通,就算是改成全局模式也不行,最后发现这和互联网的网络原理有关系,啥ping不是走网络层的啥,反正就是有可能代理是有用的,但是对ping没有用,但是因为这个表象的错误,做了很多的无用功.</p><p>最后我给 <code>git</code> 开了一个 <code>socks</code>  的代理</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy socks5://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:端口号</span><br></pre></td></tr></table></figure><p>然后就能用了,但是这个设定是全局的,希望不要出什么叉子,</p><p><em>还有值得一提的是</em></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy &#x27;socks5://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">1080</span>&#x27; </span><br></pre></td></tr></table></figure><p>这里,单引号是错误的,不能加!</p><p><a href="https://gist.github.com/bluethon/45766d0a4541ab633e32a49b6c4e4bdd">参考网页</a></p><p>似乎有方法只给github上代理,</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 以代理端口 <span class="number">7890</span> 为例</span><br><span class="line">git config --global http.https://github.com.proxy socks5h://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">7890</span></span><br><span class="line"></span><br><span class="line"># 取消代理</span><br><span class="line">git config --global --unset http.https://github.com.proxy</span><br></pre></td></tr></table></figure><blockquote id="fn_1"><sup>1</sup>. 发明的那个人如果来我学校演讲,我一定去扔臭鸡蛋<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
            <tag> 网络修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人网盘初试</title>
      <link href="/2024/01/23/2024-01-23-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98%E5%88%9D%E8%AF%95/"/>
      <url>/2024/01/23/2024-01-23-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98%E5%88%9D%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>写的代码需要备份同步,想到我还有一个服务器,似乎可以用来搭建个人的网盘,于是便尝试了一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用这段代码就能安装 <code>filebrowser</code> .然后运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filebrowser -a 0.0.0.0 -p 8007 -r /root/mydatabase</span><br></pre></td></tr></table></figure><p>指定主目录是 <code>/root/mydatabase</code></p><p>端口是 <code>8007</code></p><p><code>ip</code> 就是服务器的 <code>ip</code></p><p>然后就能在网页上运算了.</p><p>用 <code>screen -S mydatabase</code> 开了一个新的窗口悄悄运行了.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-08-有关于lrc文件的处理</title>
      <link href="/2024/01/08/2024-01-08-%E6%9C%89%E5%85%B3%E4%BA%8Elrc%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%84%E7%90%86/"/>
      <url>/2024/01/08/2024-01-08-%E6%9C%89%E5%85%B3%E4%BA%8Elrc%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>现在下载下来的<code>.vtt</code>格式的歌词已经能够被转化为<code>lrc</code>文件了,但是还有一个问题是,youtube显示字幕的方式是同一时间显示两行,而我可怜的mp3塞不下这两行字幕,在早些时候我就已经考虑过了这样一个问题了,于是遗留下来了下面一段看不懂的代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">r&quot;D:\Download\油管听力下载\out.lrc&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line">a  = data.split(<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">a = a[<span class="number">1</span>]</span><br><span class="line">b = a.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span>(<span class="string">&quot;&quot;</span> <span class="keyword">in</span> b) :</span><br><span class="line">    b.remove(<span class="string">&quot;&quot;</span>)</span><br><span class="line">time = []</span><br><span class="line">subt = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">    fenjie  = re.split(<span class="string">&#x27;(\[[^&gt;]+\])&#x27;</span>,b[i])[-<span class="number">2</span>:]</span><br><span class="line">    time.append(fenjie[<span class="number">0</span>])</span><br><span class="line">    subt.append(fenjie[<span class="number">1</span>])</span><br><span class="line">time_filter =<span class="built_in">list</span>(<span class="built_in">dict</span>.fromkeys(time))</span><br><span class="line"></span><br><span class="line">total_sub = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> time_seg <span class="keyword">in</span> time_filter:</span><br><span class="line">    sub_merge = time_seg</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(time)):</span><br><span class="line">        <span class="keyword">if</span> time[j] == time_seg:</span><br><span class="line">            sub_merge = sub_merge+<span class="string">&#x27; &#x27;</span>+subt[j]</span><br><span class="line">    total_sub = total_sub+sub_merge+<span class="string">&#x27;\n&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">r&quot;D:\Download\油管听力下载\out_new.lrc&quot;</span>,<span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(total_sub) </span><br></pre></td></tr></table></figure><br>但是值得一提的是这段代码确实是有用的,它的目的是为实现把那些同一个时间点的字幕合并为同一条.</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写了一个用python下载视频的类</title>
      <link href="/2024/01/08/2024-01-08-%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E7%94%A8python%E4%B8%8B%E8%BD%BD%E8%A7%86%E9%A2%91%E7%9A%84%E7%B1%BB/"/>
      <url>/2024/01/08/2024-01-08-%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E7%94%A8python%E4%B8%8B%E8%BD%BD%E8%A7%86%E9%A2%91%E7%9A%84%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>用yt-dlp下载视频的活,已经是老生常谈了,但是对于繁琐的视频下载要求,如果在命令行里来操作的话,多少会显得有些繁琐,因此需要一种更加完善的方法.</p><p>于是在昨天我写了一个类,能够设定一些下载条件,然后进行下载,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yt_dlp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VideoDL</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *video_url</span>):</span><br><span class="line">        self.option = &#123;&#125;</span><br><span class="line">        <span class="keyword">if</span> video_url == ():</span><br><span class="line">            self.video_url = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.video_url = video_url[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 设定下载的音频会变为mp3,下载的字幕会变为lrc格式</span></span><br><span class="line">        self.option[<span class="string">&#x27;postprocessors&#x27;</span>] = [</span><br><span class="line">            <span class="comment"># 音频转化为mp3:</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;FFmpegExtractAudio&#x27;</span>,  <span class="comment"># 使用正确的键</span></span><br><span class="line">                <span class="string">&#x27;preferredcodec&#x27;</span>: <span class="string">&#x27;mp3&#x27;</span>,  <span class="comment"># 选择音频格式，可以是 &#x27;best&#x27;, &#x27;aac&#x27;, &#x27;mp3&#x27;, 等等</span></span><br><span class="line">                <span class="string">&#x27;preferredquality&#x27;</span>: <span class="string">&#x27;192&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment"># 字幕转化为lrc:</span></span><br><span class="line">            &#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;FFmpegSubtitlesConvertor&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;lrc&#x27;</span>&#125;,</span><br><span class="line">        ]</span><br><span class="line">        <span class="comment"># 设定音频的命名格式</span></span><br><span class="line">        self.option[<span class="string">&#x27;outtmpl&#x27;</span>] = <span class="string">&quot;%(title)s.%(ext)s&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_format</span>(<span class="params">self, <span class="built_in">format</span></span>):</span><br><span class="line">        self.option[<span class="string">&#x27;format&#x27;</span>] = <span class="built_in">format</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_url</span>(<span class="params">self, url</span>):</span><br><span class="line">        self.video_url = url</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否要跳过视频</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_skip_download</span>(<span class="params">self, is_jump</span>):</span><br><span class="line">        self.option[<span class="string">&#x27;skip_download&#x27;</span>] = is_jump</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否要跳过视频设置是否要下载字幕并且设定语言(第一个值是用flag)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_write_subtitles</span>(<span class="params">self, write_subtitles, *lang</span>):</span><br><span class="line">        self.option[<span class="string">&#x27;writesubtitles&#x27;</span>] = write_subtitles</span><br><span class="line">        self.option[<span class="string">&#x27;subtitleslangs&#x27;</span>] = <span class="built_in">list</span>(lang)</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start_downloader</span>(<span class="params">self</span>):</span><br><span class="line">        ydl = yt_dlp.YoutubeDL(self.option)</span><br><span class="line">        ydl.extract_info(self.video_url, download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_info</span>(<span class="params">self</span>):</span><br><span class="line">        ydl = yt_dlp.YoutubeDL(self.option)</span><br><span class="line">        info_dict = ydl.extract_info(self.video_url, download=<span class="literal">False</span>)</span><br><span class="line">        <span class="built_in">print</span>(info_dict)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_subtitles_info</span>(<span class="params">self</span>):</span><br><span class="line">        ydl = yt_dlp.YoutubeDL(self.option)</span><br><span class="line">        info_dict = ydl.extract_info(self.video_url, download=<span class="literal">False</span>)</span><br><span class="line">        subtitles = info_dict.get(<span class="string">&#x27;subtitles&#x27;</span>, &#123;&#125;)</span><br><span class="line">        <span class="comment"># 打印字幕信息</span></span><br><span class="line">        <span class="keyword">for</span> lang, subs <span class="keyword">in</span> subtitles.items():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Language: <span class="subst">&#123;lang&#125;</span>, Subtitles available: <span class="subst">&#123;<span class="built_in">len</span>(subs)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 现在发现只有在下载音视频的时候,才会把字母转化为lrc,而其他情况下却不会</span></span><br></pre></td></tr></table></figure><p>操作方式如下,<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> VideoDL <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">dl = VideoDL()</span><br><span class="line">url = <span class="string">&quot;https://www.youtube.com/watch?v=wr6fQ4KpbRM&amp;ab_channel=TED-Ed&quot;</span></span><br><span class="line">dl.set_format(<span class="string">&#x27;bestaudio/best&#x27;</span>).set_write_subtitles(<span class="literal">True</span>,<span class="string">&quot;zh-CN&quot;</span>).set_url(url)</span><br><span class="line">dl.start_downloader()</span><br></pre></td></tr></table></figure><br>上面的这个例子创建了一个类的对象,然后进行了下载,只下载了这个YouTube视频的音频,并且下载了字幕.</p><p>如果你不知道这个视频有的字幕有哪些语言的话,可以调用<code>get_subtitles_info</code>这个方法来进行查找.</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Python写了一个自己的八元数类</title>
      <link href="/2023/12/26/2023-12-26-%E7%94%A8Python%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%85%AB%E5%85%83%E6%95%B0%E7%B1%BB/"/>
      <url>/2023/12/26/2023-12-26-%E7%94%A8Python%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%85%AB%E5%85%83%E6%95%B0%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>由于网上的 Pyoctonion 这个包调用的是Numpy的包,所以没进行我想要的符号计算,于是自己写了一个类,名为 Myoctonion.</p><p>本来是希望能够用Myoctonion来直接继承 Pyoctonion 这个类,但是盘根错节实在是太多了,Pyoctonion又调用了四元数的那个包,也只能使用浮点数,最后干脆直接自己写一个了.</p><p>我的目的只是为了能实现乘法运算,因为八元数可以用四元数来定义,Pyoctonion用的定义就是这样的.于是复制源码,然后把里面的四元数的模块用Sympy里的代替了,这样就完美的实现了符号运算.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">import</span> sympy <span class="keyword">as</span> sym</span><br><span class="line"><span class="keyword">from</span> Myquaternion <span class="keyword">import</span> Quaternion</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Myoctonion</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7</span>):</span><br><span class="line">        self.x_0 = x_0</span><br><span class="line">        self.x_1 = x_1</span><br><span class="line">        self.x_2 = x_2</span><br><span class="line">        self.x_3 = x_3</span><br><span class="line">        self.x_4 = x_4</span><br><span class="line">        self.x_5 = x_5</span><br><span class="line">        self.x_6 = x_6</span><br><span class="line">        self.x_7 = x_7</span><br><span class="line">        self.data = [x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">conjugate</span>(<span class="params">self</span>):</span><br><span class="line">        conj = Myoctonion(</span><br><span class="line">            self.x_0,</span><br><span class="line">            -(self.x_1),</span><br><span class="line">            -(self.x_2),</span><br><span class="line">            -(self.x_3),</span><br><span class="line">            -(self.x_4),</span><br><span class="line">            -(self.x_5),</span><br><span class="line">            -(self.x_6),</span><br><span class="line">            -(self.x_7),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> conj</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__mul__</span>(<span class="params">x, y</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(y, Myoctonion) <span class="keyword">and</span> <span class="built_in">isinstance</span>(x, Myoctonion):</span><br><span class="line">            a = Quaternion(x.x_0, x.x_1, x.x_2, x.x_3)</span><br><span class="line">            b = Quaternion(x.x_4, x.x_5, x.x_6, x.x_7)</span><br><span class="line">            c = Quaternion(y.x_0, y.x_1, y.x_2, y.x_3)</span><br><span class="line">            d = Quaternion(y.x_4, y.x_5, y.x_6, y.x_7)</span><br><span class="line">            a_1 = a * c - (d._eval_conjugate()) * b</span><br><span class="line">            b_1 = (d * a) + (b * (c._eval_conjugate()))</span><br><span class="line"></span><br><span class="line">            mul = Myoctonion(</span><br><span class="line">                a_1.a, a_1.b, a_1.c, a_1.d, b_1.a, b_1.b, b_1.c, b_1.d</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> mul</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(x, Myoctonion) <span class="keyword">and</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(y, Myoctonion):</span><br><span class="line">            mul = [</span><br><span class="line">                x.x_0 * y,</span><br><span class="line">                x.x_1 * y,</span><br><span class="line">                x.x_2 * y,</span><br><span class="line">                x.x_3 * y,</span><br><span class="line">                x.x_4 * y,</span><br><span class="line">                x.x_5 * y,</span><br><span class="line">                x.x_6 * y,</span><br><span class="line">                x.x_7 * y,</span><br><span class="line">            ]</span><br><span class="line">            multi = Myoctonion(</span><br><span class="line">                mul[<span class="number">0</span>], mul[<span class="number">1</span>], mul[<span class="number">2</span>], mul[<span class="number">3</span>], mul[<span class="number">4</span>], mul[<span class="number">5</span>], mul[<span class="number">6</span>], mul[<span class="number">7</span>]</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">return</span> multi</span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, key</span>):</span><br><span class="line">        <span class="comment"># 处理获取元素的操作</span></span><br><span class="line">        <span class="keyword">return</span> self.data[key]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> sym.latex( [</span><br><span class="line">            self.x_0,</span><br><span class="line">            self.x_1,</span><br><span class="line">            self.x_2,</span><br><span class="line">            self.x_3,</span><br><span class="line">            self.x_4,</span><br><span class="line">            self.x_5,</span><br><span class="line">            self.x_6,</span><br><span class="line">            self.x_7])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cal_norm</span>(<span class="params">self</span>):  <span class="comment"># define norm</span></span><br><span class="line">        b_1 = sym.sqrt(</span><br><span class="line">            self.x_0 ** <span class="number">2</span></span><br><span class="line">            + self.x_1 ** <span class="number">2</span></span><br><span class="line">            + self.x_2 ** <span class="number">2</span></span><br><span class="line">            + self.x_3 ** <span class="number">2</span></span><br><span class="line">            + self.x_4 ** <span class="number">2</span></span><br><span class="line">            + self.x_5 ** <span class="number">2</span></span><br><span class="line">            + self.x_6 ** <span class="number">2</span></span><br><span class="line">            + self.x_7 ** <span class="number">2</span></span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> b_1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>([</span><br><span class="line">            self.x_0,</span><br><span class="line">            self.x_1,</span><br><span class="line">            self.x_2,</span><br><span class="line">            self.x_3,</span><br><span class="line">            self.x_4,</span><br><span class="line">            self.x_5,</span><br><span class="line">            self.x_6,</span><br><span class="line">            self.x_7])</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python脚本-把目录下文件夹里的文件移动到同一个文件夹</title>
      <link href="/2023/12/24/Python%E8%84%9A%E6%9C%AC-%E6%8A%8A%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E9%87%8C%E7%9A%84%E6%96%87%E4%BB%B6%E7%A7%BB%E5%8A%A8%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2023/12/24/Python%E8%84%9A%E6%9C%AC-%E6%8A%8A%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E9%87%8C%E7%9A%84%E6%96%87%E4%BB%B6%E7%A7%BB%E5%8A%A8%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>假如你有一个目录,下面有很多个文件夹,如果你想要把带有某个关键字的文件夹里的每一张图片都汇总到同一个文件夹里,该怎么操作呢.<br>下面是用<code>chatGPT</code>写的程序,当然还需要自己的手动修改.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_extension</span>(<span class="params">file_path</span>):</span><br><span class="line">    _, file_extension = os.path.splitext(file_path)</span><br><span class="line">    <span class="keyword">return</span> file_extension</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy_files_with_timestamp</span>(<span class="params">src_folder, dest_folder</span>):</span><br><span class="line">    <span class="comment"># 获取源文件夹下所有文件夹</span></span><br><span class="line">    folders = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(src_folder) <span class="keyword">if</span> os.path.isdir(os.path.join(src_folder, f))]</span><br><span class="line">    count =<span class="number">0</span></span><br><span class="line">    <span class="comment"># 遍历每个文件夹</span></span><br><span class="line">    <span class="keyword">for</span> folder <span class="keyword">in</span> folders:</span><br><span class="line">        <span class="keyword">if</span> keyword <span class="keyword">in</span> folder:</span><br><span class="line">            <span class="built_in">print</span>(folder)</span><br><span class="line">        <span class="comment"># 构建文件夹的完整路径</span></span><br><span class="line">            folder_path = os.path.join(src_folder, folder)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取文件夹中的所有文件</span></span><br><span class="line">            files = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(folder_path) <span class="keyword">if</span> os.path.isfile(os.path.join(folder_path, f))]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 遍历文件夹中的每个文件</span></span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">                <span class="comment"># 构建源文件路径</span></span><br><span class="line">                source_file_path = os.path.join(folder_path, file)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 构建目标文件路径，以时间戳重新命名</span></span><br><span class="line">                dest_file_path = os.path.join(dest_folder, <span class="string">f&quot;<span class="subst">&#123;count&#125;</span>_<span class="subst">&#123;get_file_extension(file)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 复制文件到目标文件夹</span></span><br><span class="line">                shutil.copy2(source_file_path, dest_file_path)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;复制文件: <span class="subst">&#123;file&#125;</span> 到 <span class="subst">&#123;dest_file_path&#125;</span>&quot;</span>)</span><br><span class="line">                count = count+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定源文件夹、目标文件夹</span></span><br><span class="line">keyword = <span class="string">&quot;&quot;</span> <span class="comment">#指定的关键字</span></span><br><span class="line">source_folder = <span class="string">r&#x27;&#x27;</span> <span class="comment">#目录,下面有很多文件夹</span></span><br><span class="line">  </span><br><span class="line">destination_folder = <span class="string">r&#x27;&#x27;</span> <span class="comment">#目标文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数进行复制</span></span><br><span class="line">copy_files_with_timestamp(source_folder, destination_folder)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>f&quot;&#123;count&#125;_&#123;get_file_extension(file)&#125;&quot;</code> 是python 的 f-string格式化字符串 ,用了一个<code>count</code> 记数,加到文件名的前面,然后后面是一个方法,用来获取文件类型的后缀.</p><p> <code>os.path.splitext</code>  是一个方法,能够将<code>4.jpg</code>切成<code>4</code>和<code>.jpg</code>两部分</p><p>​    </p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python脚本-把文件移出Gallery-初试shutil包</title>
      <link href="/2023/12/23/Python%E8%84%9A%E6%9C%AC-%E6%8A%8A%E6%96%87%E4%BB%B6%E7%A7%BB%E5%87%BAGallery/"/>
      <url>/2023/12/23/Python%E8%84%9A%E6%9C%AC-%E6%8A%8A%E6%96%87%E4%BB%B6%E7%A7%BB%E5%87%BAGallery/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>用<code>Tachiyomi</code> 下载下来的漫画会以如下方式储存:漫画名下的文件夹下的<code>Gallrey</code>文件夹里.  </p><p>这样会产生一个问题,如果用其他软件去访问会非常的麻烦.于是拜托<code>chatGPT</code>写了下面这样一个文件,会直接把<code>Gallrey</code>文件夹下的文件以动到上层目录里,并且删掉最后的Gallery文件夹,这样就能够更好的看漫画了.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_images_to_subdirectories</span>(<span class="params">parent_directory</span>):</span><br><span class="line">    <span class="comment"># 获取父目录下的所有子文件夹</span></span><br><span class="line">    subdirectories = [d <span class="keyword">for</span> d <span class="keyword">in</span> os.listdir(parent_directory) <span class="keyword">if</span> os.path.isdir(os.path.join(parent_directory, d))]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历每个子文件夹</span></span><br><span class="line">    <span class="keyword">for</span> subdirectory <span class="keyword">in</span> subdirectories:</span><br><span class="line">        gallery_path = os.path.join(parent_directory, subdirectory, <span class="string">&#x27;Gallery&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查Gallery文件夹是否存在</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(gallery_path) <span class="keyword">and</span> os.path.isdir(gallery_path):</span><br><span class="line">            <span class="comment"># 获取Gallery文件夹下的所有文件</span></span><br><span class="line">            gallery_files = os.listdir(gallery_path)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 遍历并复制文件到子文件夹</span></span><br><span class="line">            <span class="keyword">for</span> gallery_file <span class="keyword">in</span> gallery_files:</span><br><span class="line">                source_path = os.path.join(gallery_path, gallery_file)</span><br><span class="line">                destination_path = os.path.join(parent_directory, subdirectory, gallery_file)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 使用shutil复制文件</span></span><br><span class="line">                shutil.move(source_path, destination_path)</span><br><span class="line">            <span class="comment"># 删除Gallery文件夹</span></span><br><span class="line">            os.rmdir(gallery_path)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;图片已成功抽取到每个子文件夹&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用法示例</span></span><br><span class="line">parent_directory = <span class="string">r&#x27;~~~&#x27;</span><span class="comment">#~~~用你的目录地址代替,这个目录地址里会有很多文件夹,每个文件夹里会有Galley文件夹</span></span><br><span class="line">extract_images_to_subdirectories(parent_directory)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我感觉有用的是<code>shutil</code>这个包,貌似是用来文件操作的.</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页解析的学习</title>
      <link href="/2023/10/16/a%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/10/16/a%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Xpath"><a href="#Xpath" class="headerlink" title="Xpath"></a>Xpath</h1><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>一定要以斜杠<code>/</code>开头</p><h2 id="路径查询"><a href="#路径查询" class="headerlink" title="路径查询"></a>路径查询</h2><p><code>/body/ul/li</code>  body下的ul下的li</p><p><code>//</code> 所有的子孙节点</p><p><code>/</code>只查找子节点</p><h2 id="谓词查询"><a href="#谓词查询" class="headerlink" title="谓词查询"></a>谓词查询</h2><p><code>//div[@id]</code> 查找所有有id 属性的li标签</p><p><code>//div[@id = &quot;北京&quot;]</code> </p><p><code>*</code> 代表所有</p><h2 id="属性查询"><a href="#属性查询" class="headerlink" title="属性查询"></a>属性查询</h2><p>   查找到id为l1的class的属性值</p><p><code>//ul/li[@id=&quot;l1&quot;]/@class</code></p><h2 id="模糊查找"><a href="#模糊查找" class="headerlink" title="模糊查找"></a>模糊查找</h2><p><code>contains</code>  是否包含</p><p><code>start-with</code> 以什么开头</p><h2 id="逻辑查询"><a href="#逻辑查询" class="headerlink" title="逻辑查询"></a>逻辑查询</h2><p><code>div[@id = &quot;北京&quot; and @class = &quot;c1&quot;]</code></p><p>且用的是<code>and</code></p><p>或可能有点坑,有点像<code>pandas</code>的那味(拆开来写?),等不会写了再说.</p><p><code>or</code> 还是 <code>|</code></p><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><p><code>li[position()&gt;1 and position()&lt;5]</code></p><p><code>last()</code> 列表最后一个</p><h2 id="Xpath-的好处"><a href="#Xpath-的好处" class="headerlink" title="Xpath 的好处"></a>Xpath 的好处</h2><ul><li>优点：<ul><li>效率高</li><li>语法简洁</li><li>可扩展性强</li></ul></li><li>缺点：<ul><li>学习曲线较陡</li><li>表达能力有限</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">tree =etree.HTML(html)</span><br></pre></td></tr></table></figure><h1 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h1><p>time.sleep(2)</p><h2 id="元素定位"><a href="#元素定位" class="headerlink" title="元素定位"></a>元素定位</h2><p><code>driver.find_element(By.XPATH,&quot;……&quot;)</code><br><code>driver.find_elements(By.XPATH,&quot;……&quot;)</code></p><h2 id="对元素的控制"><a href="#对元素的控制" class="headerlink" title="对元素的控制"></a>对元素的控制</h2><ul><li><code>click()</code>：点击元素。</li><li><code>send_keys()</code>：向元素输入文本。</li><li><code>select()</code>：选择下拉列表中的选项。</li><li><code>check()</code>：选择复选框或单选按钮。</li><li><code>uncheck()</code>：取消选择复选框或单选按钮。</li><li><code>submit()</code>：提交表单。</li><li><code>clear()</code>：清空表单。</li></ul><h2 id="pytest-pom-Selenium"><a href="#pytest-pom-Selenium" class="headerlink" title="pytest+pom+Selenium"></a>pytest+pom+Selenium</h2><h3 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h3><ol><li><p>代码相似，无法重用，增加工作量</p></li><li><p>元素加载有延迟，会导致出错</p></li><li><p>浏览器重复驱动、关闭</p></li></ol><p>通过封装框架的方式,自动解决常见的问题</p><h3 id="创建测试用例"><a href="#创建测试用例" class="headerlink" title="创建测试用例"></a>创建测试用例</h3><ol><li>创建<code>test_</code>开头文件</li><li>创建<code>test_</code>开头的函数(或者是类)</li><li>在用例中使用断言<code>assert</code></li></ol><h3 id="执行测试用例"><a href="#执行测试用例" class="headerlink" title="执行测试用例"></a>执行测试用例</h3><ol><li><p>在命令行使用<code>pytest</code></p></li><li><p>右键执行某个用例</p></li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pytest</span><br><span class="line"><span class="keyword">if</span> __name__ = <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">pytest.main()<span class="comment">#程序入口</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure></li></ol><h3 id="读懂测试结果"><a href="#读懂测试结果" class="headerlink" title="读懂测试结果"></a>读懂测试结果</h3><div class="table-container"><table><thead><tr><th>符号</th><th>含义</th><th></th></tr></thead><tbody><tr><td>.</td><td>通过</td><td></td></tr><tr><td>F</td><td>失败</td><td>没有达到目标</td></tr><tr><td>E</td><td>出错</td><td>没有启动,无法判断(框架有问题)</td></tr><tr><td>s</td><td>跳过</td><td>没有去执行</td></tr></tbody></table></div>]]></content>
      
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 网页解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页解析的学习</title>
      <link href="/2023/10/16/a%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/10/16/a%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E7%BD%91%E9%A1%B5%E8%A7%A3%E6%9E%90%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 网页解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络修复</title>
      <link href="/2023/10/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E7%BD%91%E7%BB%9C%E4%BF%AE%E5%A4%8D/"/>
      <url>/2023/10/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E7%BD%91%E7%BB%9C%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="2023年10月16日"><a href="#2023年10月16日" class="headerlink" title="2023年10月16日"></a>2023年10月16日</h2><p>今天在用bard学习的时候,聊着聊着就断线了,然后发现服务器挂了,换了好多的端口都没有用,于是决定一下reboot一下服务器了.<br>依旧用的是debian11.</p><p>然后重新安装了大佬的代码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate -q -O install.sh <span class="string">&quot;https://raw.githubusercontent.com/wulabing/Xray_onekey/nginx_forward/install.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x install.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>这次用的是ngnix前置</p><p>跑了这一命令以后还是不行,很难受.</p><p>于是重新下载了一个带内核的<code>v2rayN</code></p><p>跑了一下,发现还是不行.<br>最后发现用复制链接出来,然后从剪切板导入方法得到的配置是错误的,于是手动修改了一下,发现最后可以了.</p><p>继续滚回去学我的<code>xpath</code>了.</p><h1 id="相关程序安装"><a href="#相关程序安装" class="headerlink" title="相关程序安装"></a>相关程序安装</h1><p>由于服务器reboot了上面的所有东西都没了,都要重新安装,发现debian11有python3但是没有pip3,所以需要安装一个.</p><h2 id="安装-pip"><a href="#安装-pip" class="headerlink" title="安装 pip"></a>安装 pip</h2><blockquote><p>电脑上没有sudo ,但是有apt,这两个是啥?</p><blockquote><ol><li><strong>sudo</strong> 是 <strong>superuser do</strong> 的缩写，用于以超级用户（root）权限运行命令。sudo 可以让普通用户在没有 root 权限的情况下执行需要 root 权限的操作。 </li><li><strong>apt</strong> 是 <strong>Advanced Packaging Tool</strong> 的缩写，是一个用于管理 Linux 软件包的命令行工具。apt 可以用于安装、卸载、更新、搜索 Linux 软件包。 </li></ol></blockquote><p>开来或许并不需要使用sudo,因为我这个账号已经是root了.</p></blockquote><p>我这样安装了sudo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update </span><br><span class="line">apt install sudo </span><br></pre></td></tr></table></figure><p>然后用下面的命令安装了pip3:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update </span><br><span class="line">sudo apt install python3-pip </span><br></pre></td></tr></table></figure><h2 id="安装-ffmpeg"><a href="#安装-ffmpeg" class="headerlink" title="安装 ffmpeg"></a>安装 ffmpeg</h2><ol><li>更新 apt 包索引：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><ol><li>安装 <strong>ffmpeg</strong>：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ffmpeg</span><br></pre></td></tr></table></figure><h2 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 网络修复 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客-django</title>
      <link href="/2023/10/15/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-django/"/>
      <url>/2023/10/15/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-django/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>高中数学的计算技巧</title>
      <link href="/2023/10/13/%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9A%84%E8%AE%A1%E7%AE%97%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/10/13/%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9A%84%E8%AE%A1%E7%AE%97%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>有一道题目需要求函数的值域范围.<br>其中<br>$f = 2 x^{2} \cdot \left(1 - \log{\left(x \right)}\right)(x&gt;0)$<br>,则</p><p>则$f’ = 4 x \left(1 - \log{\left(x \right)}\right) - 2 x = 2 x - 4 x \log(\left(x \right))$</p><p>则$f’’ = -4 \log{\left(x \right)} - 2$</p><p>则导函数先增后减,在$x = e^{-\frac{1}{2}}$,时$f’$有最大值为</p><p>$4 e^{-\frac{1}{2}}$,但是要注意到$f’$实际上在递减的过程中并没有小于零，因为其极限为$0$，所以它只会无限的趋近零,</p><p>这说明原函数只有先增后减的两个过程.</p><p>那么$f’$在何时为零,即函数$f$ 的驻点在哪里?</p><p>通过计算可知驻点在$x = e^{\frac{1}{2}}$,则函数在该点取到最大值.</p><p>最大值为$e$.</p><p>函数的图像大致如下图所示</p><p><img src="/2023/10/13/%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9A%84%E8%AE%A1%E7%AE%97%E6%8A%80%E5%B7%A7/1697184677901.png" alt="1697184677901"></p><p>但是如果将自变量$x^2$ 用 $t$ 来替换,则原式可以转化为</p><p>$g = t \cdot \left(2 - \log{\left(t \right)}\right)(x&gt;0)$</p><p>$g’ = 1 - \log{\left(t \right)}$</p><p>可知新函数和原函数的值域是相同的,但是求它的最值显然容易得多,</p><p>$g’$ 的驻点为$e$,则$g$的最大值为$e$.</p><p>两函数的图像比较如下:</p><p><img src="/2023/10/13/%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E7%9A%84%E8%AE%A1%E7%AE%97%E6%8A%80%E5%B7%A7/1697186516025.png" alt="1697186516025"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 高中数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关于教资面试</title>
      <link href="/2023/10/12/%E4%B8%AA%E4%BA%BAHexo%E5%8D%9A%E5%AE%A2-%E6%9C%89%E5%85%B3%E4%BA%8E%E6%95%99%E8%B5%84%E9%9D%A2%E8%AF%95/"/>
      <url>/2023/10/12/%E4%B8%AA%E4%BA%BAHexo%E5%8D%9A%E5%AE%A2-%E6%9C%89%E5%85%B3%E4%BA%8E%E6%95%99%E8%B5%84%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="椭圆例题"><a href="#椭圆例题" class="headerlink" title="椭圆例题"></a>椭圆例题</h1><p><img src="/2023/10/12/%E4%B8%AA%E4%BA%BAHexo%E5%8D%9A%E5%AE%A2-%E6%9C%89%E5%85%B3%E4%BA%8E%E6%95%99%E8%B5%84%E9%9D%A2%E8%AF%95/1697088023201.png" alt="1697088023201"></p><ul><li>着重复习焦点在X轴的椭圆方程 </li><li>条理清晰，重难点突出 </li><li>配合试讲有一定的板书 </li><li>请在10分钟内完成试讲内容。</li></ul><p>请同学们根据之前我们学过的求解曲线方程的方法,前后四人为一小组,认真思考分析题目,并在小组内进行讨论求解,选择一种合适的方法了求解这个问题,时间五分钟,现在开始.</p><p>老师听见同学们讨论的声音逐渐的减小了,在刚才巡视的过程中,发现一小组讨论的很激烈,那么请你们说一说.</p><p>一组代表说……</p><p>解题方法:</p><ul><li><p>根据几何含义,确定$a$的值</p></li><li><p>根据椭圆的标准方程,运用待定系数法,来确定a的值</p><ul><li>缺点,计算量较大</li></ul></li></ul><h2 id="结尾套话"><a href="#结尾套话" class="headerlink" title="结尾套话"></a>结尾套话</h2><p>各位评委老师我今天的试讲到此结束,感谢各位评委老师的耐性聆听.</p><h1 id="函数的单调性"><a href="#函数的单调性" class="headerlink" title="函数的单调性"></a>函数的单调性</h1><h2 id="导入部分"><a href="#导入部分" class="headerlink" title="导入部分"></a>导入部分</h2><p>复习导入:利用初中知识描述图像的变化特征</p><h2 id="新授环节"><a href="#新授环节" class="headerlink" title="新授环节"></a>新授环节</h2><ol><li>给出表1一3，引导学生从函数值得角度观察思考这种变化规律， 学生回答；</li><li>继续引导学生利用符号化得数学语言表征图像的变化规律</li><li>学生大致说明后，教师引导取值$x_1$与$x_2$进行更规范说明； </li><li>教师归纳出单调性的定义并进行板书； </li><li>借助二次函数来说明：单调性为局部性质,$x_1$与$x_2$， 让学生体会数学语言的精炼。</li></ol><h2 id="巩固练习环节"><a href="#巩固练习环节" class="headerlink" title="巩固练习环节"></a>巩固练习环节</h2><h2 id="课堂小结"><a href="#课堂小结" class="headerlink" title="课堂小结"></a>课堂小结</h2><h2 id="布置作业"><a href="#布置作业" class="headerlink" title="布置作业"></a>布置作业</h2><h1 id="基本不等式例题一"><a href="#基本不等式例题一" class="headerlink" title="基本不等式例题一"></a>基本不等式例题一</h1><p>回顾:基本不等式的表达式</p><p>代数意义:</p><p>几何意义:半径不小于半弦长</p><p><img src="/2023/10/12/%E4%B8%AA%E4%BA%BAHexo%E5%8D%9A%E5%AE%A2-%E6%9C%89%E5%85%B3%E4%BA%8E%E6%95%99%E8%B5%84%E9%9D%A2%E8%AF%95/1697206719587.png" alt="1697206719587"></p><h2 id="向量的几何表示"><a href="#向量的几何表示" class="headerlink" title="向量的几何表示"></a>向量的几何表示</h2><p><img src="/2023/10/12/%E4%B8%AA%E4%BA%BAHexo%E5%8D%9A%E5%AE%A2-%E6%9C%89%E5%85%B3%E4%BA%8E%E6%95%99%E8%B5%84%E9%9D%A2%E8%AF%95/1697289683849.png" alt="1697289683849"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 教师资格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多邻国日语学习</title>
      <link href="/2023/10/11/%E5%A4%9A%E9%82%BB%E5%9B%BD%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/10/11/%E5%A4%9A%E9%82%BB%E5%9B%BD%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h1><h2 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h2><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><p>しろ  白</p><p>あか  「赤」 红</p><p>あお  「青」 蓝</p><h3 id="有关于早上好"><a href="#有关于早上好" class="headerlink" title="有关于早上好"></a>有关于早上好</h3><p>日语中“早上好”有两种说法：</p><ul><li><strong>おはようございます。</strong> (ohayo gozaimasu) - 这是比较正式的说法，可以用在任何场合，包括对上级、长辈、陌生人等。</li><li><strong>おはよう。</strong> (ohayo) - 这是比较随意的说法，可以用在熟人之间。</li></ul><h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><p>猫 Neko</p><p>犬 Inu</p><p>鳥 Tori</p><p>甘い寿司 Amai sushi 甜的寿司</p><p>てりやき Teri yaki 照烧</p><p>脏的    [汚い」 （kitanai）</p><p>天妇罗（日语：天ぷら，罗马音：tempura） </p><p>便当: 弁当 (bento)  </p><h3 id="时间、季节"><a href="#时间、季节" class="headerlink" title="时间、季节"></a>时间、季节</h3><ul><li><p>白天 「昼」（ひる) ：常用，表示白天，包括早上、中午和下午。</p></li><li><p>晚上「夜」（よる） </p></li><li><p>阴天「曇り」（くもり） </p></li><li><p>晴天 「晴れ」（はれ） </p></li><li><p>冬天 「冬」（ふゆ） </p></li><li><p>夏天 「夏」（なつ） </p></li></ul><h3 id="空间位置、地点"><a href="#空间位置、地点" class="headerlink" title="空间位置、地点"></a>空间位置、地点</h3><ul><li>屋子：家（いえ）</li><li>房间：部屋（へや）</li><li>外面：外（そと）</li><li><strong>学校</strong> (がっこう) - 学校</li></ul><h3 id="物件"><a href="#物件" class="headerlink" title="物件"></a>物件</h3><ul><li><strong>切符</strong> (きっぷ) 是专指交通工具的票券，包括火车票、公交车票、地铁票等 </li><li><strong>かばん</strong> (かばん) - 书包</li><li><strong>えんぴつ</strong> (えんぴつ) - 铅笔</li><li><strong>電話</strong> (でんわ) - 电话</li></ul><h3 id="器官、部位"><a href="#器官、部位" class="headerlink" title="器官、部位"></a>器官、部位</h3><ul><li>眼睛<ul><li>日语：目 (め)</li><li>罗马音：me</li><li>例句：私の目は茶色です。 (watashi no me wa chairo desu.) - 我的眼睛是棕色的。</li></ul></li><li>耳朵<ul><li>日语：耳 (みみ)</li><li>罗马音：mimi</li><li>例句：私の耳は聞こえません。 (watashi no mimi wa kikoemasen.) - 我听不见。</li></ul></li><li>背<ul><li>日语：背 (せ)</li><li>罗马音：se</li><li>例句：私の背中が痛いです。 (watashi no senaka ga itai desu.) - 我的背很疼。</li></ul></li></ul><h3 id="读、穿、喝"><a href="#读、穿、喝" class="headerlink" title="读、穿、喝"></a>读、穿、喝</h3><ul><li>读：読む（よむ）</li><li>穿：着る（きる）</li><li>喝：飲む（のむ）</li></ul><h1 id="其他单词"><a href="#其他单词" class="headerlink" title="其他单词"></a>其他单词</h1><h2 id="N5"><a href="#N5" class="headerlink" title="N5"></a>N5</h2><ul><li>报社：新聞社（しんぶんしゃ）</li><li>人：人（ひと）</li><li>授课：授業（じゅぎょう）</li><li>果汁：ジュース（じゅーす）</li><li>医院：病院（びょういん）</li><li>讨厌：嫌い（きらい）</li><li>生日：誕生日（たんじょうび）</li><li>疼痛：痛み（いたみ）</li><li>明信片：はがき（はがき）</li><li>卡拉ok：カラオケ（からおけ）</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解析几何中问题的转化</title>
      <link href="/2023/10/11/%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E4%B8%AD%E9%97%AE%E9%A2%98%E7%9A%84%E8%BD%AC%E5%8C%96/"/>
      <url>/2023/10/11/%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E4%B8%AD%E9%97%AE%E9%A2%98%E7%9A%84%E8%BD%AC%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/2023/10/11/%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E4%B8%AD%E9%97%AE%E9%A2%98%E7%9A%84%E8%BD%AC%E5%8C%96/1697024725933.png" alt="1697024725933"></p><p>这到题目似是要证明线段长度之间的关系,实际上为证明出存在一个直角三角形,然后自然的应用相似比来证明.</p><h2 id="单个点引出两条直线的问题"><a href="#单个点引出两条直线的问题" class="headerlink" title="单个点引出两条直线的问题"></a>单个点引出两条直线的问题</h2><p><img src="/2023/10/11/%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E4%B8%AD%E9%97%AE%E9%A2%98%E7%9A%84%E8%BD%AC%E5%8C%96/1697025791478.png" alt="1697025791478"></p><h2 id="两条直线有交点的问题"><a href="#两条直线有交点的问题" class="headerlink" title="两条直线有交点的问题"></a>两条直线有交点的问题</h2><p><img src="/2023/10/11/%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95%E4%B8%AD%E9%97%AE%E9%A2%98%E7%9A%84%E8%BD%AC%E5%8C%96/1697025845385.png" alt="1697025845385"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 高中数学 </tag>
            
            <tag> 解析几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python求解解析几何</title>
      <link href="/2023/10/10/%E7%94%A8python%E6%B1%82%E8%A7%A3%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/"/>
      <url>/2023/10/10/%E7%94%A8python%E6%B1%82%E8%A7%A3%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>写了几个程序来求解高中的解析几何,才开始用的是一个<code>sympy</code>的几何库来做的,但是只能做椭圆的问题,后来就直接用<code>solve</code>来暴力的求解了.<br>这些程序的主要目的是联立直线和圆锥曲线的方程,这是求解解析几何问题的基本方法,即所谓的设而不求:联立方程之后利用韦达定理来得到两个焦点坐标的关系.</p><h2 id="三个求解函数"><a href="#三个求解函数" class="headerlink" title="三个求解函数"></a>三个求解函数</h2><h3 id="求解直线和抛物线的交点"><a href="#求解直线和抛物线的交点" class="headerlink" title="求解直线和抛物线的交点:"></a>求解直线和抛物线的交点:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">solveParabola</span>(<span class="params">p,point</span>):</span><br><span class="line">    x0 = point[<span class="number">0</span>]</span><br><span class="line">    y0 = point[<span class="number">1</span>]</span><br><span class="line">    ((x1,y1),(x2,y2)) = nonlinsolve([y**<span class="number">2</span>-<span class="number">2</span>*p*x, y-k*(x-x0)-y0 ], (x,y))</span><br><span class="line">    <span class="keyword">return</span> x1,y1,x2,y2</span><br></pre></td></tr></table></figure><h3 id="求解直线和椭圆的交点"><a href="#求解直线和椭圆的交点" class="headerlink" title="求解直线和椭圆的交点:"></a>求解直线和椭圆的交点:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#请在安装了sympy以后在jupyter(IPython notebook)下运算该程序,这主要是为了更美观的显示数学公式</span></span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solveEllipse</span>(<span class="params">a,b,point</span>):</span><br><span class="line">    <span class="keyword">from</span> sympy.abc <span class="keyword">import</span> x, y,k,m</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> nonlinsolve</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> simplify</span><br><span class="line">    x0 = point[<span class="number">0</span>]</span><br><span class="line">    y0 = point[<span class="number">1</span>]</span><br><span class="line">    ((x1,y1),(x2,y2)) = nonlinsolve([x**<span class="number">2</span>/a**<span class="number">2</span>+y**<span class="number">2</span>/b**<span class="number">2</span>-<span class="number">1</span>, y-k*(x-x0)-y0 ], (x,y))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1+x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1+x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1*x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1*x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1+y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1+y2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1*y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1*y2))</span><br><span class="line">    <span class="keyword">return</span> x1,y1,x2,y2;</span><br><span class="line">x1,y1,x2,y2 = solveEllipse(<span class="number">4</span>,<span class="number">3</span>,(<span class="number">1</span>,<span class="number">0</span>));</span><br></pre></td></tr></table></figure><h3 id="求解直线和双曲线的交点"><a href="#求解直线和双曲线的交点" class="headerlink" title="求解直线和双曲线的交点:"></a>求解直线和双曲线的交点:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">solveHyperbola</span>(<span class="params">a,b,point</span>):</span><br><span class="line">    <span class="keyword">from</span> sympy.abc <span class="keyword">import</span> x, y,k,m</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> nonlinsolve</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> simplify</span><br><span class="line">    x0 = point[<span class="number">0</span>]</span><br><span class="line">    y0 = point[<span class="number">1</span>]</span><br><span class="line">    ((x1,y1),(x2,y2)) = nonlinsolve([x**<span class="number">2</span>/a**<span class="number">2</span>+y**<span class="number">2</span>/b**<span class="number">2</span>-<span class="number">1</span>, y-k*(x-x0)-y0 ], (x,y))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1+x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1+x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1*x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1*x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1+y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1+y2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1*y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1*y2))</span><br><span class="line">    <span class="keyword">return</span> x1,y1,x2,y2;</span><br></pre></td></tr></table></figure><p>由于双曲线和抛物线的开口有方向性,则在实际过程中,可能需要根据题目的主要内容来修改函数中的参数.</p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>已知双曲线$\Gamma$:${\frac{x^{2}}{a^{2}}}-{\frac{y^{2}}{b^{2}}}=1$，的焦距为$4$,过点$P(2,\frac{\sqrt{3}}{3})$</p><blockquote><ol><li>求双曲线$\Gamma$的方程.</li><li>过双曲线 $\Gamma$ 的左焦点 $F$ 分别作斜率为 $k_1,k_2$的两直线 $l_1$与 $l_2$，直线 $l_1$交双曲线 $\Gamma$  于 $A,B$ 两点，直线 $l_2$交双曲线  $\Gamma$ 于 $C,D$ 两点，设 $M,N$ 分别为 $AB$ 与 $CD$ 的中点，若 $k_1⋅ k_2=-1$，试求 $ \bigtriangleup  OMN$ 与  $\bigtriangleup  FMN$ 的面积之比.</li></ol></blockquote><ol><li>可以求出其方程为${\frac{x^{2}}{3}}-y^{2}=1$</li><li>左焦点坐标为(-2,0)</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1,y1,x2,y2 =solveHyperbola(sqrt(<span class="number">3</span>),<span class="number">1</span>,(-<span class="number">2</span>,<span class="number">0</span>));</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">k_1,k_2  =symbols(<span class="string">&#x27;k_1 k_2&#x27;</span>)</span><br><span class="line">m_x = simplify(((x1+x2)/<span class="number">2</span>).subs(k,k_1))</span><br><span class="line">m_y = simplify(((y1+y2)/<span class="number">2</span>).subs(k,k_1))</span><br></pre></td></tr></table></figure><p>则得到了$M$的坐标,由于$k_1⋅ k_2=-1$,则也能得到N的坐标为<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n_x = simplify(((x1+x2)/<span class="number">2</span>).subs(k,-<span class="number">1</span>/k_1))</span><br><span class="line">n_y = simplify(((y1+y2)/<span class="number">2</span>).subs(k,-<span class="number">1</span>/k_1))</span><br></pre></td></tr></table></figure></p><p><img src="/2023/10/10/%E7%94%A8python%E6%B1%82%E8%A7%A3%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/1697002468458.png" alt="1697002468458"></p><p>当</p><script type="math/tex; mode=display">\frac{6k_{1}^{2}}{1-3k_{1}^{2}}=\frac{6}{1-3k_{1}^{2}}</script><p>时,$k_1 = \pm 1$, </p><p>直线 $l_{MN}$的方程为 $x =  -3$,</p><p>当其斜率存在事,其斜率为</p><p><img src="/2023/10/10/%E7%94%A8python%E6%B1%82%E8%A7%A3%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/1697002849839.png" alt="1697002849839"></p><p>则其方程为:</p><script type="math/tex; mode=display">y-\frac{2k_{1}}{1-3k_{1}^{2}}\!=\!-\frac{2k_{1}}{3(k_{1}^{2}\!-\!1)}\!\left(x-\frac{6k_{1}^{2}}{1-3k_{1}^{2}}\right)</script><p>令$y =0$等于零,则解得$x =  -3$.</p><p>综上所述,则直线$l_{MN}$ 恒过定点$(-3,0)$,</p><p>则</p><p><script type="math/tex">\frac{S_{\triangle O M N}}{S_{\triangle P M N}}=\frac{\textstyle{\frac{1}{2}}|y_{N}-y_{M}||O E|}{\textstyle{\frac{1}{2}}|y_{M}-y_{N}||F E|}=\frac{|O E|}{|F E|}=3</script>.</p><h3 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h3><ol><li>利用斜率的关系,统一两条直线中斜率的变量.</li><li>观察出直线过定点.</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 高中数学 </tag>
            
            <tag> 解析几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词学习</title>
      <link href="/2023/10/10/Hexo_%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/10/10/Hexo_%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Django is a high-level Python web framework that encourages rapid development and clean, <strong>pragmatic</strong> design. Built by experienced developers, it takes care of much of the <strong>hassle</strong> of web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.</p></blockquote><p>pragmatic  adj. 务实的；实事求是的；注重实效的</p><p>hassle n. 困难，麻烦；激战</p><blockquote><p><strong>Reassuringly secure.</strong></p><p>Django takes security seriously and helps developers avoid many common security mistakes.</p></blockquote><p>reassure vt. 消除恐惧或疑虑；恢复信心</p><p>Reassuringly secure 难道翻译成,令人安心?</p><blockquote><p><strong>Ridiculously fast</strong>.</p><p>Django was designed to help developers take applications from concept to completion as quickly as possible.</p></blockquote><p>Ridiculously fast 这或许应该翻译成”快得离谱”</p><blockquote><p><strong>Incredibly versatile.</strong></p><p>Companies, organizations and governments have used Django to build all sorts of things — from content management systems to social networks to scientific computing platforms.</p></blockquote><p>Incredibly versatile 才艺超群?</p>]]></content>
      
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Markdown中使用html</title>
      <link href="/2023/10/10/%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0-%E5%9C%A8MarkDown%E4%B8%AD%E4%BD%BF%E7%94%A8html/"/>
      <url>/2023/10/10/%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0-%E5%9C%A8MarkDown%E4%B8%AD%E4%BD%BF%E7%94%A8html/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>能够在markdown中使用html语言来完成一些文字排版.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-family:times;color:green&quot;</span>&gt;</span></span><br><span class="line">This text is in Times and green<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如上的一串代码实现了,下面的结果:</p><p style="font-family:times;color:green">This text is in Times and green</p><p>那么类似的我们能够排版一些古诗文,</p><p>代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;font-family:楷体&quot;&gt;</span><br><span class="line">赵客缦胡缨，吴钩霜雪明。&lt;br&gt;</span><br><span class="line">银鞍照白马，飒沓如流星。&lt;br&gt;</span><br><span class="line">十步杀一人，千里不留行。&lt;br&gt;</span><br><span class="line">事了拂衣去，深藏身与名。&lt;br&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>显示效果如下:</p><p style="font-family:楷体">赵客缦胡缨，吴钩霜雪明。<br>银鞍照白马，飒沓如流星。<br>十步杀一人，千里不留行。<br>事了拂衣去，深藏身与名。<br></p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日古诗文</title>
      <link href="/2023/10/10/Hexo%E6%AF%8F%E6%97%A5%E5%8F%A4%E8%AF%97%E6%96%87/"/>
      <url>/2023/10/10/Hexo%E6%AF%8F%E6%97%A5%E5%8F%A4%E8%AF%97%E6%96%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="菩萨蛮2023年10月19日"><a href="#菩萨蛮2023年10月19日" class="headerlink" title="菩萨蛮2023年10月19日"></a>菩萨蛮2023年10月19日</h2><blockquote><p style="font-family:楷体">催花未歇花奴鼓，酒醒已见残红舞。<br>    不忍覆馀觞，临风泪数行。<br>粉香看又别，空剩当时月。<br>月也异当时，凄清照鬓丝。 </p></blockquote><h2 id="鹧鸪天2023年10月16日"><a href="#鹧鸪天2023年10月16日" class="headerlink" title="鹧鸪天2023年10月16日"></a>鹧鸪天2023年10月16日</h2><blockquote><p style="font-family:楷体">晚日寒鸦一片愁。柳塘新绿却温柔。<br>若教眼底无离恨，不信人间有白头。<br>肠已断，泪难收。相思重上小红楼。<br>情知已被山遮断，频倚阑干不自由。<br></p></blockquote><h2 id="无题-2023年10月14日"><a href="#无题-2023年10月14日" class="headerlink" title="无题 2023年10月14日"></a>无题 2023年10月14日</h2><blockquote><p style="font-family:楷体">飒飒东风细雨来，芙蓉塘外有轻雷。<br>金蟾啮锁烧香入，玉虎牵丝汲井回。<br>贾氏窥帘韩掾少，宓妃留枕魏王才。<br><b>春心莫共花争发，    一寸相思一寸灰！</b><br></p></blockquote><p>这是李商隐写的无题之一.</p><h2 id="忆仙姿-2023年10月12日"><a href="#忆仙姿-2023年10月12日" class="headerlink" title="忆仙姿 2023年10月12日"></a>忆仙姿 2023年10月12日</h2><blockquote><p style="font-family:楷体">曾宴桃源深洞，一曲清歌舞凤。<br>长记别伊时，和泪出门相送。<br>如梦，如梦，<br>残月落花烟重。</p><p>长记别伊时又作长记欲别时,一曲清歌舞凤又作一曲舞鸾歌凤.</p></blockquote><p>词是李存勖写的,忆仙姿就是所谓如梦令的旧名.</p><blockquote><p>苏轼云： “（如梦令）本唐庄宗制，一名‘忆仙姿’，嫌其不雅，改云‘如梦’”</p></blockquote><p>李存勖是后唐庄宗的儿子,史称晋王.</p><h2 id="秣陵怀古-2023年10月11日"><a href="#秣陵怀古-2023年10月11日" class="headerlink" title="秣陵怀古 2023年10月11日"></a>秣陵怀古 2023年10月11日</h2><blockquote><p style="font-family:楷体">山色江声共寂寥，十三陵树晚萧萧。<br>中原事业如江左，芳草何须怨六朝。<br></p></blockquote><p>秣陵是南京的一个别称,纳兰性德作为一个清朝人,写这首词是在表达什么呢?</p><h2 id="菩萨蛮-2023年10月9日"><a href="#菩萨蛮-2023年10月9日" class="headerlink" title="菩萨蛮 2023年10月9日"></a>菩萨蛮 2023年10月9日</h2><blockquote><p style="font-family:楷体">玉楼明月长相忆，柳丝袅娜春无力。<br>门外草萋萋，送君闻马嘶。<br>画罗金翡翠，香烛销成泪。<br>花落子规啼，绿窗残梦迷。<br></p></blockquote><h2 id="老子·七十七章-2023年10月8日"><a href="#老子·七十七章-2023年10月8日" class="headerlink" title="老子·七十七章 2023年10月8日"></a>老子·七十七章 2023年10月8日</h2><blockquote><p style="font-family:楷体">天之道，其犹张弓欤？<br>高者抑之，下者举之；有余者损之，不足者补之。<br>    <b>天之道，损有余而补不足。</b><br>    <b>人之道则不然，损不足以奉有余。</b><br>孰能有余以奉天下，唯有道者。<br>是以圣人为而不恃，功成而不处，其不欲见贤邪。<br></p></blockquote><h2 id="清平乐-2023年10月7日"><a href="#清平乐-2023年10月7日" class="headerlink" title="清平乐 2023年10月7日"></a>清平乐 2023年10月7日</h2><blockquote><p style="font-family:楷体">雨晴烟晚。绿水新池满。<br>双燕飞来垂柳院，小阁画帘高卷。<br>黄昏独倚朱阑。西南新月眉弯。<br>砌下落花风起，罗衣特地春寒。 <br></p></blockquote><p>冯延巳的婉约词那是写得相当不错的.</p><p>最后一句中的<code>罗衣特地春寒</code> 类似晏殊的清平乐中的最后一句<code>银屏昨夜微寒</code>.</p><p>不知道是晏学习了冯,还是这本来就是冯的诗词呢?</p><blockquote><p style="font-family:楷体">金风细细。叶叶梧桐坠。<br>绿酒初尝人易醉。一枕小窗浓睡。<br>紫薇朱槿花残。斜阳却照阑干。<br>双燕欲归时节，<b>银屏昨夜微寒</b>。<br></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 汉语 </tag>
            
            <tag> 文学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo命令的回顾</title>
      <link href="/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/"/>
      <url>/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>“故地重游,月圆更寂寞~ ~”<br>由于已经有一年多没有使用hexo了, 我对个这工具的大多数命令已经十分的生疏,有必要复习一下相关的知识了.</p><h2 id="生成静态文件和部署"><a href="#生成静态文件和部署" class="headerlink" title="生成静态文件和部署"></a>生成静态文件和部署</h2><p><code>hexo generate</code>生成<br><code>hexo deploy</code>部署,将会将最新的文件同步到github对应的网站.</p><h2 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h2><p><code>hexo server</code> 在本地生成一个服务器</p><h2 id="新建文章？"><a href="#新建文章？" class="headerlink" title="新建文章？"></a>新建文章？</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure><p>比如用<br><code>hexo new &quot;hexo命令的回顾&quot;</code></p><h3 id="关于标签的使用"><a href="#关于标签的使用" class="headerlink" title="关于标签的使用"></a>关于标签的使用</h3><p>在使用多个标签的时候,需要用使用方括号,格式如下:<br><code>tags: [数学,拓扑学,数学问题]</code></p><p>冒号后面必须得空一格,否则会报错.</p><h2 id="插入图片？"><a href="#插入图片？" class="headerlink" title="插入图片？"></a>插入图片？</h2><p><img src="/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/logo.png" alt="logo"></p><p>由于之前的设定,我在<code>typora</code>之中插入图片的同时,会自动在当前目录下生成一个文件夹并且将图片复制到其中.</p><p><img src="/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/1696230712926.png" alt="1696230712926"></p><h2 id="如何更换主题"><a href="#如何更换主题" class="headerlink" title="如何更换主题"></a>如何更换主题</h2><p>在 <code>_config.yml</code> 文件中更改theme关键字后的主题名,比如我用的是仙人掌主题:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><h2 id="如何添加站内搜索"><a href="#如何添加站内搜索" class="headerlink" title="如何添加站内搜索"></a>如何添加站内搜索</h2><p>不同的主题或许配置不尽相同,今天改换用Next主题了.大概的配置是</p><p>安装插件:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save  </span><br></pre></td></tr></table></figure></p><p>然后在主题配置文件下将<code>local_search</code>后面改为<code>true</code>.</p><h2 id="如何添加评论"><a href="#如何添加评论" class="headerlink" title="如何添加评论"></a>如何添加评论</h2><p>使用的是 disqus</p><p>参考:<a href="https://www.jianshu.com/p/d68de067ea74">https://www.jianshu.com/p/d68de067ea74</a></p><p>在主题的配置文件<code>_config.yml</code>中找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">isqus:</span><br><span class="line">  enable: true</span><br><span class="line">  shortname: dictat</span><br><span class="line">  count: true</span><br><span class="line">  #post_meta_order: 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上下极限和极限关系</title>
      <link href="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/"/>
      <url>/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本篇文章参考了 Ross 的Elementary Analysis 一书,旨在复习数列的上下极限相关的内容.</p><h2 id="上下极限和极限的关系"><a href="#上下极限和极限的关系" class="headerlink" title="上下极限和极限的关系"></a>上下极限和极限的关系</h2><p>所谓数列的上极限和下极限的定义如下:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/697904f8-f5c2-4b9f-a224-53d6e30b4bdb.png" alt="500"></p><p>我们并没有限制数列${s_n}$ 是有限的,也就是说,如果数列是上方无界的,他的上极限就是$+\infty$:</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/a679e331-8b87-4b12-80c2-8fb7325ff0de.png" alt=""></p><p>$a_N = \sup { s_n:n&gt;N }$ 这个数列是递减的.可以看出 $\lim \sup s_n \le \sup{s_n : n \in \mathbb{N} }$.</p><p>下极限小于等于上极限,证明如下:</p><script type="math/tex; mode=display">\begin{align}& s_{n+1} \le \sup \{s_n : n > N \} ()\\& \inf \{s_n : n > N \} \le \sup \{s_n : n > N \}\\&\inf \{s_n : n > N+1 \} \le \lim\sup \{s_n : n > N \}\\&\lim\inf \{s_n : n > N+1 \} \le \lim\sup \{s_n : n > N \}\end{align}</script><p>上下极限和极限有下面关系(<strong>Theorem 10.7</strong>):</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/1ced2a7a-bafc-4993-b77f-84d276f11922.png" alt=""></p><p>即极限确定(一个实数,或是$-\infty$和$+\infty$),则上下极限和极限相同;反之,上下极限相同,则数列的极限确定.</p><p>(1)的证明如下:<br>首先,极限为$\infty$:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/82aa2934-167b-4f02-a9be-7f19ffcc6e77.png" alt=""><br>其次,极限为实数:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/28cc250b-01c8-46d9-9aa3-d038d3c051bb.png" alt=""><br>又因为,下极限小于等于上极限,所以得证.</p><p>(2)的证明如下:</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/fb9a9705-df2a-4fcb-9cd0-f0507b1db253.png" alt=""></p><h2 id="数列上下极限和子列极限的关系"><a href="#数列上下极限和子列极限的关系" class="headerlink" title="数列上下极限和子列极限的关系"></a>数列上下极限和子列极限的关系</h2><h3 id="单调子列逼近上下极限"><a href="#单调子列逼近上下极限" class="headerlink" title="单调子列逼近上下极限:"></a>单调子列逼近上下极限:</h3><p>首先有定理说明了,一定存在一个单调递增的子列,它的极限是上极限,类似可以说明下极限的情况.</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/d96cbf4a-1746-4a89-8ca7-434fb17b02ab.png" alt=""></p><p>首先如果数列无上界,则存在一个趋向正无穷的子列:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/abf8721d-0f03-414b-8e59-ccb29adf2915.png" alt=""><br>这是因为:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/a68cfc4f-12d8-4fb8-8e2d-9c82b1fe4d31.png" alt=""><br>可见这样构造的子列是<strong>单调递增</strong>的,且极限为$+\infty$,此时上极限也为$+\infty$(为什么?).同样的,如果无下界的话,就会有单调的子列极限为$-\infty$.</p><p>我们还有说明的是,如果数列有上界,则也有单调的子列极限为上极限.(同样可以得到有下界时对于下极限的情况.)</p><p>因为有上界,所以上极限是有限实数,设为$t$,</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/f14671f1-1065-41aa-aa85-c66117cb0e36.png" alt=""></p><h3 id="上下极限和子列极限的关系"><a href="#上下极限和子列极限的关系" class="headerlink" title="上下极限和子列极限的关系"></a>上下极限和子列极限的关系</h3><p>下面的定理说明了,<em>上下极限和子列极限的关系</em>,即子列极限构成的集合$S$非空;$S$的上确界等于上极限,下确界等于下极限;极限存在<strong>当且仅当</strong>$S$中的元素只有一个:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/dc035c1c-6a30-4700-89e5-320b0038a56b.png" alt=""><br>证明如下: \<br>(i) 根据上诉的<strong>Theorem 11.7</strong>,知道至少有子列的极限是上下极限,所以$S$ 不为空.\<br>(ii)需要用到<strong>Theorem 10.7</strong><br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/c24d4db0-f8e6-414d-b8f4-41c70f3cefeb.png" alt=""><br>(iii) 由定理<strong>Theorem 10.7</strong>可以得到.</p>]]></content>
      
      
      <categories>
          
          <category> 数学分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析,数列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex的footnote的引用问题</title>
      <link href="/2022/05/05/latex%E7%9A%84footnote%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2022/05/05/latex%E7%9A%84footnote%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="主要问题"><a href="#主要问题" class="headerlink" title="主要问题"></a>主要问题</h2><p>在使用latex的<code>\ref</code>引用<code>\footnote</code> 的命令的时候,会发现引用第一个脚注,显示的却是第一个脚注的问题.</p><p>发现问题和这个链接中的问题类似:<a href="https://wenda.latexstudio.net/q-2091.html">使用了自定义数字样式后 footnote 引用错误，请问怎么修复？</a></p><p>根本原因是因为使用了自定义样式的脚注</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>使用以下命令,自定义<code>autoref</code>的脚注命名,这里改成了楷书</p><p><code>\renewcommand&#123;\footnoteautorefname&#125;&#123;\kaishu&#123;脚注&#125;&#125;</code></p><p>使用以下命令,使脚注按章节计数</p><p><code>\counterwithout&#123;footnote&#125;&#123;section&#125;</code></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>使用<code>\ref</code>来引用<code>\footnote</code> 会出现太多的问题了,还得再仔细研究一下.</p><p>最后,latex这个老古董什么时候能被淘汰啊…..</p>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex技巧</title>
      <link href="/2022/05/02/latex%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/05/02/latex%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex分章节独立插入</title>
      <link href="/2022/05/02/latex%E5%88%86%E7%AB%A0%E8%8A%82%E7%8B%AC%E7%AB%8B%E6%8F%92%E5%85%A5/"/>
      <url>/2022/05/02/latex%E5%88%86%E7%AB%A0%E8%8A%82%E7%8B%AC%E7%AB%8B%E6%8F%92%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在使用latex的过程中,我们可以先建立一个主文件,然后使用<code>\include&#123;&#125;</code> 还有<code>\input&#123;&#125;</code> 的方法来插入子文件.譬如插入子文件<code>1.tex</code>,则在正文区中使用<code>\input&#123;1.tex&#125;</code>.</p><p>但是有一个问题是,这样使用的子文件<code>1.tex</code>内容只能是<code>latex正文的格式</code>而不能成为一个独立的可以编译的latex文件,这是十分不便利的(也就是说这个文件只能有<code>\begin&#123;document&#125;...\end&#123;document&#125;</code>之间的内容).</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>使用<code>standalone</code>宏包能够解决这个问题.</p><p><a href="https://tex.stackexchange.com/questions/11311/how-to-include-a-document-into-another-document">参考网页</a></p>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学问题:n维流形的边界是n-1维流形?</title>
      <link href="/2022/04/25/n%E7%BB%B4%E6%B5%81%E5%BD%A2%E7%9A%84%E8%BE%B9%E7%95%8C%E6%98%AFn-1%E7%BB%B4%E6%B5%81%E5%BD%A2/"/>
      <url>/2022/04/25/n%E7%BB%B4%E6%B5%81%E5%BD%A2%E7%9A%84%E8%BE%B9%E7%95%8C%E6%98%AFn-1%E7%BB%B4%E6%B5%81%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>来源自<a href="https://math.stackexchange.com/questions/554156/the-boundary-of-an-n-manifold-is-an-n-1-manifold">stackexchange:The boundary of an $n$-manifold is an ($n−1$)-manifold</a></p><h2 id="Question"><a href="#Question" class="headerlink" title="Question:"></a>Question:</h2><blockquote><p> Suppose $M$ is an $n$-dimensional manifold with boundary.<br>Show that the boundary of $M$ is an $(n−1)$-dimensional manifold (without boundary) when endowed with the subspace topology. </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 拓扑学 </tag>
            
            <tag> 数学问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·六:hexo中插入pdf文件和视频的链接</title>
      <link href="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/"/>
      <url>/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="插入pdf文件"><a href="#插入pdf文件" class="headerlink" title="插入pdf文件"></a>插入pdf文件</h2><p>为此我们需要使用一个叫做<code>hexo-pdf</code> 的插件,使用下面代码进行安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-pdf</span><br></pre></td></tr></table></figure><p>在markdown文件中使用下面的语法来引用pdf文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf ./bash_freshman.pdf %&#125;</span><br></pre></td></tr></table></figure><p>目前测试发现PDF只能放在<code>_post</code>文件夹里用<code>./bash_freshman.pdf</code>来引用,不能放在 <code>_post</code>文件夹下的文件夹里用<code>./文件夹名/bash_freshman.pdf</code>来引用.我觉得这可能是<code>别的插件</code>的原因导致的,这个问题主要就是路径引用的问题,暂时就这样使用了.</p><p>引用网络上的pdf文件,当然不会出现路径问题,语法是<sup><a href="#fn_1" id="reffn_1">1</a></sup>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf https://drive.google.com/file/d/1wK9YbTKEseKdn79fBg7oIyChMehUP1jP/preview %&#125;</span><br></pre></td></tr></table></figure><div class="pdfobject-container" data-target="https://drive.google.com/file/d/1wK9YbTKEseKdn79fBg7oIyChMehUP1jP/preview" data-height="500px"></div><p>这里使用的是谷歌云盘,发现<code>链接末尾</code>得用<code>/preview</code>才行,而用<code>view</code>不行.</p><h2 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h2><h3 id="插入网络视屏"><a href="#插入网络视屏" class="headerlink" title="插入网络视屏"></a>插入网络视屏</h3><p>使用插件:hexo-tag-video</p><p>插件地址:<a href="https://github.com/geekplux/hexo-tag-video">hexo-tag-video下载</a></p><p>使用语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video &#x27;videoCode&#x27; %&#125;</span><br></pre></td></tr></table></figure><p><code>videoCode</code>是一串代码,在b站可以用下面的方式得到(在分享里)<br><img src="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/1650852624894.png" alt="1650852624894"></p><p>在这里我插入了一个B站的视屏:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video &lt;iframe width=&quot;160&quot; height=&quot;315&quot; src=&quot;https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=..search-card.all.click&quot; frameborder=&quot;0&quot; gesture=&quot;media&quot; allow=&quot;encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt; %&#125;</span><br></pre></td></tr></table></figure><p>效果如下</p><video src="<iframe,src=//player.bilibili.com/player.html?aid=938055170&bvid=BV1zT4y1Y7j7&cid=570809489&page=1&autoplay=0,scrolling=no,border=0,sandbox=,frameborder=no,framespacing=0,allowfullscreen=true>,</iframe>" preload="metadata" controls playsinline poster="">Sorry, your browser does not support the video tag.</video><p>下面是不使用插件得到的效果(看来这个插件的主要作用是<code>美化</code>)</p><p><iframe src="//player.bilibili.com/player.html?aid=938055170&bvid=BV1zT4y1Y7j7&cid=570809489&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><br>使用网易云的外链:</p><p><img src="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/1650853762444.png" alt="1650853762444"></p><p>有一点问题,最后只能在markdown中直接插入<code>videoCode</code>即:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=34144942&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>效果:</p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=34144942&auto=1&height=66" ></iframe><br>看来只能用这个插件插入视频链接</p><h3 id="本地视频插入"><a href="#本地视频插入" class="headerlink" title="本地视频插入"></a>本地视频插入</h3><p>找到了方法,使用之前插入图片时候使用的插件<code>hexo-asset-link</code>,但是不支持窗口内部嵌入,只能提供链接在新页面打开<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[说明](文件夹名/视屏名.mp4)</span><br></pre></td></tr></table></figure><br>用这个方法也能够提供 <code>pdf</code> 等其他文件的链接.<br><a href="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/动物森友会.mp4">这是一个视频的链接</a></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>2024年1月30日<br>今天我发现了一件奇怪的事情,我发现用next 自带如下引用pdf的格式,好像 <code>pdf</code> 要放到和 <code>.md</code> 同名的文件夹里,然后直接用文件名引用…<br>比如<code>&#123;% pdf  shi.pdf %&#125;</code><br>效果如下:<br><div class="pdfobject-container" data-target="shi.pdf" data-height="500px"></div><br><a href="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/shi.pdf">PDF链接</a><br>同样能用这这种方式直接引用同名文件夹里的视频,<code>&#123;% video  动物森友会.mp4 %&#125;</code><br>效果如下:<br><video src="动物森友会.mp4" preload="metadata" controls playsinline poster="">Sorry, your browser does not support the video tag.</video></p><p>2024年1月31日</p><p>或许是因为我开起了<a href="https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9">文章资源文件夹</a>功能.</p><blockquote id="fn_1"><sup>1</sup>. 2024年1月26日 今天我发现这个 <code>Next</code> 主题里如果需要使用pdf的话,需要进行开启的设定<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·五:hexo主题配置</title>
      <link href="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/"/>
      <url>/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>通过配置hexo的主题,可以使得网站的界面更具有艺术性.下面介绍hexo主题配置的一些知识:</p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>在主目录下使用git命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><h2 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h2><p>在主配置文件中<code>_config.yml</code>,将<code>theme: cactus</code>冒号后的部分改成你想要使用的主题(这里用的是<code>cactus</code> 意为仙人掌),主题可以从网上下载,放在<code>themes</code>文件夹里,里面有原有的主题<code>landscape</code>.    </p><p>注:<code>cactus</code> 意为仙人掌</p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>在<code>themes</code>文件夹对应的主题文件夹下,譬如<code>cactus</code>下也有配置文件<code>_config.yml</code>,我们将其称之为<code>主题配置</code>文件,这与<code>主配置</code>文件需要进行区分.</p><h3 id="语言设定"><a href="#语言设定" class="headerlink" title="语言设定"></a>语言设定</h3><p>我们将语言设置为中文,找到主配置文件中的<code>language: zh-CN</code>.(即,改成zh-CN).</p><p>在<code>\cactus\languages</code>中的对应的文件<code>zh-CN.yml</code>中,我们可以设置对应的配置,如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  home: 首页</span><br><span class="line">  about: 关于</span><br><span class="line">  articles: 归档</span><br><span class="line">  projects: 项目</span><br><span class="line">  tag: 标签</span><br><span class="line">  category: 分类</span><br><span class="line">  search: 搜索</span><br></pre></td></tr></table></figure><p>可以将对应的名称DIY成你想要的命名法,比如把<code>search: 搜索</code>改成<code>search: 找一下</code></p><h2 id="导航标签管理"><a href="#导航标签管理" class="headerlink" title="导航标签管理"></a>导航标签管理</h2><p>在<code>主题配置</code>文件中有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  home: /</span><br><span class="line">  about: /about/</span><br><span class="line">  articles: /archives/</span><br><span class="line">  projects: 放一个网站连接</span><br></pre></td></tr></table></figure><p>提供导航(navigation)标签,我们可以自定义想要的标签.</p><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><h4 id="更改’关于’连接"><a href="#更改’关于’连接" class="headerlink" title="更改’关于’连接"></a>更改’关于’连接</h4><p>在下载的<code>cactus</code> 主题中,有<strong>关于</strong>一项</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650770977163.png" alt="1650770977163"></p><p>但是这个页面没有创立,我们要创立一个新的页面,</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650771025794.png" alt="1650771025794"></p><p>可以看出,需要创建的页面的名称是<code>about</code>.</p><p>用下面的命令创建:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>会在<code>\source\about</code>生成一个markdown 文件,修改成你想要的样子即可.</p><h4 id="新建’tags’链接"><a href="#新建’tags’链接" class="headerlink" title="新建’tags’链接"></a>新建’tags’链接</h4><p><a href="https://blog.csdn.net/cflsup/article/details/123452683">参考文章:Hexo添加分类和标签</a></p><p>新建一个页面:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags </span><br></pre></td></tr></table></figure><p> 找到<code>index.md</code>文件 </p><p>将:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-01-07 22:53:43</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-01-07 22:53:43</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在启动hexo 效果如下:</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650773499488.png" alt="1650773499488"></p><p>但我们还需要把<code>英文:tags</code> 改成<code>中文:标签</code>,在<code>cactus\languages\zh-CN.yml</code></p><p>中加上<code>tags: 标签</code>即可.</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650773644718.png" alt="1650773644718"></p><p>大功告成!</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·四:hexo使用markdown语法粘贴图片</title>
      <link href="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%9B%9B/"/>
      <url>/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>对于这个问题,我们简要的谈一下.</p><p>要知道在hexo中使用图片的时候不能简单的使用markdown语法,即<code>![这里是名称](这里是图片链接)</code>的方式插入图片,不得不说,这的确是开发者有些懒惰了(hexo居然是一个没有毕业的台湾大学生开发的,那没事了).</p><p>但是智慧(懒惰的)的我们可以在网上寻求答案,也许要踩不可数的坑.</p><p>最后在<a href="https://chrismroberts.com/2020/01/06/using-markdown-in-hexo-to-add-images/">这个链接: Adding Images to Hexo Posts with Markdown </a> 里找到了解决方法,只要在谷歌搜索<code>hexo markdown pic</code>,出现的里面的第一个就是了,叫我们去安装一个插件,用下面的代码.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -s hexo-asset-link</span><br></pre></td></tr></table></figure><p>然后修改<code>_config.yml</code>中的<code>post_asset_folder: true</code>(改掉false)</p><p>在这里我们需要吸取的教训就是:</p><ol><li>即使是同一个名字的插件,也有可能是不同效果的(有些是个人修改版,需要甄别<strong>安装源</strong>)</li><li>要尽量挑比较新的文章看.</li></ol><p>我用这篇文章的时候就没有安装成功:<a href="https://zhuanlan.zhihu.com/p/280758822?utm_source=qq">hexo博客显示markdown路径的图片</a><br>就可能是安装源的问题.</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·三:绑定本地hexo到github站点</title>
      <link href="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/"/>
      <url>/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>现在我们已经在本地搭建了hexo站点,并且可以在本地访问访问,接下来要做的就是把这个网站传到云端,这里我们借助github给我们提供的免费站点.</p><p>一般来说,对于这个问题网上有详细的教程(搜索:hexo+github博客搭建):</p><ol><li>建立github网站项目,成功之后会生成一个初始的静态网站,这方面的知识完全可以参考 <a href="https://docs.github.com/cn/pages/quickstart">官方教程:GitHub Pages 快速入门</a></li></ol><p>得到了类似这样的一个页面：    </p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/1.png" alt="1650637781304"></p><ol><li>需要安装 git 生成连接github网站秘钥,用于下面的部署操作.</li></ol><p>在这里我来说一个遇到的大坑,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/wapchief/wapchief.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在传输到云端上(称之为<strong>部署</strong>)之前,我们需要修改hexo项目文件夹下的主配置文件<code>_config.yml</code>,添加上面一段文字.</p><p>才开始的时候我不知道<code>branch: master</code> 是什么意思,导致网站一直没有显示出来,</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/1650766184876.png" alt="1650766184876"></p><p>如图所示,图中有两个branch,我们部署的是master分支,而原来生成网页时候在<code>setting-pages</code>里用的的是main分支,需要改变一下.</p><p>此外,由于github访问速度的原因,部署需要一些时间才能生效.</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·二:hexo博客搭建</title>
      <link href="/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/"/>
      <url>/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在这篇文章中主要介绍两个方面的内容,docsify还有hexo,其中主要介绍后者.前者的主要是起到一个书写说明文档(例如对某个package的说明)的作用,而后者才是有关于个人静态博客的搭建.</p><h1 id="docsify入门"><a href="#docsify入门" class="headerlink" title="docsify入门"></a>docsify入门</h1><p>首先我们试着在window中使用docsify:</p><h2 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h2><p>参考 <a href="https://blog.csdn.net/jiahao1186/article/details/121878532">网页:windows下安装node.js</a> </p><p>参考<a href="https://segmentfault.com/a/1190000039973959">网页:Linux下安装node.js</a></p><p>安装以后配置环境变量,如果没有生效的话就重启一下.</p><h2 id="安装-docsify"><a href="#安装-docsify" class="headerlink" title="安装 docsify"></a>安装 docsify</h2><p>确保已经安装了 nodejs 和 Git</p><p>参考 <a href="https://blog.csdn.net/qq_31848763/article/details/112368252">网页:Windows中使用 docsify</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在cmd窗口输入:npm install docsify-cli -g</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在cmd窗口 使用docsify初始化命令：docsify init ./docs</span><br><span class="line">在cmd窗口 运行本地服务器：docsify serve ./docs</span><br><span class="line">在通过http://localhost:3000/访问本地服务器</span><br></pre></td></tr></table></figure><h3 id="npm-使用镜像"><a href="#npm-使用镜像" class="headerlink" title="npm 使用镜像"></a>npm 使用镜像</h3><p>npm 命令在国内使用可能会比较慢,所以可以替换成国内的镜像网站源:</p><p>参考 <a href="https://blog.csdn.net/weixin_44816439/article/details/115396762">npm install卡慢解决方案</a></p><h2 id="使用-docsify"><a href="#使用-docsify" class="headerlink" title="使用 docsify"></a>使用 docsify</h2><h2 id="本地的测试"><a href="#本地的测试" class="headerlink" title="本地的测试"></a>本地的测试</h2><h2 id="docsify-Nginx搭建个人知识库"><a href="#docsify-Nginx搭建个人知识库" class="headerlink" title="docsify+Nginx搭建个人知识库"></a>docsify+Nginx搭建个人知识库</h2><p>参考<a href="https://zhuanlan.zhihu.com/p/461419869">docsify+Nginx搭建个人知识库</a></p><p>这个我们暂时不谈,因为现在还不做需要做文档说明.</p><h1 id="hexo-使用"><a href="#hexo-使用" class="headerlink" title="hexo 使用"></a>hexo 使用</h1><p>参考网页:<a href="https://blog.csdn.net/weixin_44075537/article/details/109901284">Windows系统hexo安装教程</a></p><p>按照这个网页的流程走下来,能够创建一个hexo的模板页面出来,大概的现实效果是这样子的:</p><p><img src="/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/7d593d44-91f5-42a7-9100-88df3601b4f6.png" alt=""></p><p>当然后面可以替换主题模板,这里是原装的landscape而我替换成了next.效果如下:</p><p>效果如下:</p><p><img src="/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/f69a051e-f34d-41a1-9f8a-b63dbcb9347e.png" alt=""></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>参考<a href="https://blog.csdn.net/dxxzst/article/details/76135935">Hexo 最常用的几个命令</a></p><p>查看版本: <code>hexo -v</code></p><p>打开hexo:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><ul><li>hexo g 是 hexo generate 的缩写，命令效果一致。</li></ul><p>启动的话似乎只需要用的<code>hexo g</code></p><p>新建一个标题为 aboutme 的页面，默认链接地址为 主页地址/aboutme/</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page aboutme</span><br></pre></td></tr></table></figure><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="https://hexo.io/zh-cn/docs/writing">链接</a></p><p>在hexo中使用数学公式才是大坑,这占用了我大量的时间.</p><h2 id="hexo-中使用数学公式"><a href="#hexo-中使用数学公式" class="headerlink" title="hexo 中使用数学公式"></a>hexo 中使用数学公式</h2><p>参考文章<a href="https://blog.csdn.net/qq_38496329/article/details/104065659">Hexo博客支持数学公式</a></p><p>我发现根据他的提示不行,只好作罢了….,以后在提数学公式的事情吧.或许还有弄清楚hexo 的配置文件的问题.(有时候数学公式会没有刷新,可能是mathjax 的原因)</p><p>最后在这位兄弟的博客上面找到了有用的回答 <a href="https://qingstudios.com/2020/03/01/Hexo%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/">如何在Hexo中插入数学公式</a></p><p>接下来要做的?</p><p>接下来我们要把本地做好的网站放到互联网上,这就需要用到服务器还有域名了,但是我们不这样做,我们用现成的github给我们提供的域名.</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学测试</title>
      <link href="/2022/04/22/%E6%95%B0%E5%AD%A6%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/04/22/%E6%95%B0%E5%AD%A6%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>还不错</p><p>$a_1$</p>]]></content>
      
      
      
        <tags>
            
            <tag> 拓扑学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·一:域名的购买和Nginx 初步</title>
      <link href="/2022/04/22/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%80/"/>
      <url>/2022/04/22/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>最近因为疫情和封校的缘故,在拼夕夕上买的游戏卡带迟迟没有发货,于是在网上无聊买了一个域名(www.<em>*</em>.com,我后来发现其实可以直接用服务器加端口登录,只要安装了Nginx就行了,实在是血亏,域名大抵只有好看的作用吧!!!),花了十五元(一年的使用权)…..</p><p>以前也买过,但是在国内买域名的话,似乎需要实名认证,这就有些麻烦了,比如在阿里云上面买域名,就会有人过来问你买这个要做些什么啊?这就十分的麻烦,我要做什么和他们有什么关系,所以不如买国外的域名和服务器,清闲自在.</p><p>然后再去阿里云上搞了一个免费的服务器,只有两个星期的使用期,就这个试用期还要答题,或许国内的商家才喜欢做这种无聊的事情,仿佛大家的时间十分的廉价似的.</p><p>下面讲 Nginx 使用过程中的大坑,全部都是阿里云引起的:</p><ol><li>端口没有开放</li></ol><p>因为这个原因,网页总是打不开!!!我还以为是Nginx没有启动.</p><ol><li>域名需要备案</li></ol><p>如果你使用阿里云的服务器(或许国内的服务器都有这样的矛盾),绑定的是国外的域名,你在网页上访问自己的网站是打不开的,会跳出来一个叫你去备案的链接….</p><p>Nginx 说到底,我也不知道是干啥的,但是我知道类似的东西有tomcat ,Apache ,貌似是一个叫 <strong>web服务器</strong>的东西.</p><p>我们写几个.html 文件放在到某个制定的文件夹里,然后更改Nginx 的设定,就能在浏览器上查看这些内容了.</p><p>当然现在以我的能力,实在是不能写出什么漂亮的东西,而且这些只是静态网页罢了,就好像是ppt,访问者只能看不能写,为了更加高级的交互性,可能还需要<strong>数据库</strong>的知识.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 用vim修改配置文件nginx.conf </span><br><span class="line">vim  /etc/nginx/conf/nginx.conf </span><br><span class="line"># 重新加载配置文件</span><br><span class="line">/etc/nginx/sbin/nginx  -s reload </span><br><span class="line"># 查看配置文件是否成功</span><br><span class="line">/etc/nginx/sbin/nginx  -t</span><br></pre></td></tr></table></figure><p>注意我的nginx 是在 <code>/etc/nginx/sbin/nginx</code> 这个位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#编辑主页面</span><br><span class="line">vim /etc/nginx/html/index.html</span><br></pre></td></tr></table></figure><p>所谓的主界面就是,打开域名的时候会见到的那个页面,在<code>vim /etc/nginx/html/</code>文件夹下.</p><p>如果你在windows 系统下载一个Nginx ,然后运行,在浏览器里输入:<code>http://localhost</code> 就会显示成功启动的初始主界面.可以修改打开的端口比如变成</p><p><code>http://localhost:81</code>.</p><p>最后,本人抱着实用主义,对所用的知识无需理解,只要会用就行.(p.s. 除了哲学还有比较基础的数学.)</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
