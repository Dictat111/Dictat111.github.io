<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>用python求解解析几何</title>
      <link href="/2023/10/10/%E7%94%A8python%E6%B1%82%E8%A7%A3%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/"/>
      <url>/2023/10/10/%E7%94%A8python%E6%B1%82%E8%A7%A3%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/</url>
      
        <content type="html"><![CDATA[<p>写了几个程序来求解高中的解析几何,才开始用的是一个<code>sympy</code>的几何库来做的,但是只能做椭圆的问题,后来就直接用<code>solve</code>来暴力的求解了.<br>这些程序的主要目的是联立直线和圆锥曲线的方程,这是求解解析几何问题的基本方法,即所谓的设而不求:联立方程之后利用韦达定理来得到两个焦点坐标的关系.</p><h3 id="求解直线和抛物线的交点"><a href="#求解直线和抛物线的交点" class="headerlink" title="求解直线和抛物线的交点:"></a>求解直线和抛物线的交点:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">solveParabola</span>(<span class="params">p,point</span>):</span><br><span class="line">    x0 = point[<span class="number">0</span>]</span><br><span class="line">    y0 = point[<span class="number">1</span>]</span><br><span class="line">    ((x1,y1),(x2,y2)) = nonlinsolve([y**<span class="number">2</span>-<span class="number">2</span>*p*x, y-k*(x-x0)-y0 ], (x,y))</span><br><span class="line">    <span class="keyword">return</span> x1,y1,x2,y2</span><br></pre></td></tr></table></figure><h3 id="求解直线和椭圆的交点"><a href="#求解直线和椭圆的交点" class="headerlink" title="求解直线和椭圆的交点:"></a>求解直线和椭圆的交点:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#请在安装了sympy以后在jupyter(IPython notebook)下运算该程序,这主要是为了更美观的显示数学公式</span></span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solveEllipse</span>(<span class="params">a,b,point</span>):</span><br><span class="line">    <span class="keyword">from</span> sympy.abc <span class="keyword">import</span> x, y,k,m</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> nonlinsolve</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> simplify</span><br><span class="line">    x0 = point[<span class="number">0</span>]</span><br><span class="line">    y0 = point[<span class="number">1</span>]</span><br><span class="line">    ((x1,y1),(x2,y2)) = nonlinsolve([x**<span class="number">2</span>/a**<span class="number">2</span>+y**<span class="number">2</span>/b**<span class="number">2</span>-<span class="number">1</span>, y-k*(x-x0)-y0 ], (x,y))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1+x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1+x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1*x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1*x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1+y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1+y2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1*y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1*y2))</span><br><span class="line">    <span class="keyword">return</span> x1,y1,x2,y2;</span><br><span class="line">x1,y1,x2,y2 = solveEllipse(<span class="number">4</span>,<span class="number">3</span>,(<span class="number">1</span>,<span class="number">0</span>));</span><br></pre></td></tr></table></figure><h3 id="求解直线和双曲线的交点"><a href="#求解直线和双曲线的交点" class="headerlink" title="求解直线和双曲线的交点:"></a>求解直线和双曲线的交点:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">solveHyperbola</span>(<span class="params">a,b,point</span>):</span><br><span class="line">    <span class="keyword">from</span> sympy.abc <span class="keyword">import</span> x, y,k,m</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> nonlinsolve</span><br><span class="line">    <span class="keyword">from</span> sympy <span class="keyword">import</span> simplify</span><br><span class="line">    x0 = point[<span class="number">0</span>]</span><br><span class="line">    y0 = point[<span class="number">1</span>]</span><br><span class="line">    ((x1,y1),(x2,y2)) = nonlinsolve([x**<span class="number">2</span>/a**<span class="number">2</span>+y**<span class="number">2</span>/b**<span class="number">2</span>-<span class="number">1</span>, y-k*(x-x0)-y0 ], (x,y))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1+x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1+x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;x1*x2 = &#x27;</span>)</span><br><span class="line">    display(simplify(x1*x2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1+y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1+y2))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;y1*y2 = &#x27;</span>)</span><br><span class="line">    display(simplify(y1*y2))</span><br><span class="line">    <span class="keyword">return</span> x1,y1,x2,y2;</span><br></pre></td></tr></table></figure><p>由于双曲线和抛物线的开口有方向性,则在实际过程中,可能需要根据题目的主要内容来修改函数中的参数.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 高中数学 </tag>
            
            <tag> 解析几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词学习</title>
      <link href="/2023/10/10/Hexo_%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/10/10/Hexo_%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Django is a high-level Python web framework that encourages rapid development and clean, <strong>pragmatic</strong> design. Built by experienced developers, it takes care of much of the <strong>hassle</strong> of web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.</p></blockquote><p>pragmatic  adj. 务实的；实事求是的；注重实效的</p><p>hassle n. 困难，麻烦；激战</p><blockquote><p><strong>Reassuringly secure.</strong></p><p>Django takes security seriously and helps developers avoid many common security mistakes.</p></blockquote><p>reassure vt. 消除恐惧或疑虑；恢复信心</p><p>Reassuringly secure 难道翻译成,令人安心?</p><blockquote><p><strong>Ridiculously fast</strong>.</p><p>Django was designed to help developers take applications from concept to completion as quickly as possible.</p></blockquote><p>Ridiculously fast 这或许应该翻译成”快得离谱”</p><blockquote><p><strong>Incredibly versatile.</strong></p><p>Companies, organizations and governments have used Django to build all sorts of things — from content management systems to social networks to scientific computing platforms.</p></blockquote><p>Incredibly versatile 才艺超群?</p>]]></content>
      
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Markdown中使用html</title>
      <link href="/2023/10/10/%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0-%E5%9C%A8MarkDown%E4%B8%AD%E4%BD%BF%E7%94%A8html/"/>
      <url>/2023/10/10/%E7%BD%91%E7%AB%99%E6%96%87%E7%AB%A0-%E5%9C%A8MarkDown%E4%B8%AD%E4%BD%BF%E7%94%A8html/</url>
      
        <content type="html"><![CDATA[<p>能够在markdown中使用html语言来完成一些文字排版.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-family:times;color:green&quot;</span>&gt;</span></span><br><span class="line">This text is in Times and green<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如上的一串代码实现了,下面的结果:</p><p style="font-family:times;color:green">This text is in Times and green</p><p>那么类似的我们能够排版一些古诗文,</p><p>代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;font-family:楷体&quot;&gt;</span><br><span class="line">赵客缦胡缨，吴钩霜雪明。&lt;br&gt;</span><br><span class="line">银鞍照白马，飒沓如流星。&lt;br&gt;</span><br><span class="line">十步杀一人，千里不留行。&lt;br&gt;</span><br><span class="line">事了拂衣去，深藏身与名。&lt;br&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>显示效果如下:</p><p style="font-family:楷体">赵客缦胡缨，吴钩霜雪明。<br>银鞍照白马，飒沓如流星。<br>十步杀一人，千里不留行。<br>事了拂衣去，深藏身与名。<br></p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown;html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日古诗文</title>
      <link href="/2023/10/10/Hexo%E6%AF%8F%E6%97%A5%E5%8F%A4%E8%AF%97%E6%96%87/"/>
      <url>/2023/10/10/Hexo%E6%AF%8F%E6%97%A5%E5%8F%A4%E8%AF%97%E6%96%87/</url>
      
        <content type="html"><![CDATA[<h2 id="清平乐-2023年10月7日"><a href="#清平乐-2023年10月7日" class="headerlink" title="清平乐 2023年10月7日"></a>清平乐 2023年10月7日</h2><blockquote><p>雨晴烟晚。绿水新池满。<br>双燕飞来垂柳院，小阁画帘高卷。<br>黄昏独倚朱阑。西南新月眉弯。<br>砌下落花风起，罗衣特地春寒。 </p></blockquote><p>冯延巳的婉约词那是写得相当不错的.</p><p>最后一句中的<code>罗衣特地春寒</code> 类似晏殊的清平乐中的最后一句<code>银屏昨夜微寒</code>.</p><p>不知道是晏学习了冯,还是这本来就是冯的诗词呢?</p><blockquote><p style="font-family:楷体">金风细细。叶叶梧桐坠。<br>绿酒初尝人易醉。一枕小窗浓睡。<br>紫薇朱槿花残。斜阳却照阑干。<br>双燕欲归时节，<b>银屏昨夜微寒</b>。<br></p></blockquote><h2 id="老子·七十七章-2023年10月8日"><a href="#老子·七十七章-2023年10月8日" class="headerlink" title="老子·七十七章 2023年10月8日"></a>老子·七十七章 2023年10月8日</h2><blockquote><p>天之道，其犹张弓欤？<br>高者抑之，下者举之；有余者损之，不足者补之。<br>天之道，损有余而补不足。<br><strong>人之道则不然，损不足以奉有余。</strong><br><strong>孰能有余以奉天下，唯有道者。</strong><br>是以圣人为而不恃，功成而不处，其不欲见贤邪。</p></blockquote><h2 id="菩萨蛮-2023年10月9日"><a href="#菩萨蛮-2023年10月9日" class="headerlink" title="菩萨蛮 2023年10月9日"></a>菩萨蛮 2023年10月9日</h2><blockquote><p>玉楼明月长相忆，柳丝袅娜春无力。<br>门外草萋萋，送君闻马嘶。<br>画罗金翡翠，香烛销成泪。<br>花落子规啼，绿窗残梦迷。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 汉语,文学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo命令的回顾</title>
      <link href="/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/"/>
      <url>/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/</url>
      
        <content type="html"><![CDATA[<p>“故地重游,月圆更寂寞~ ~”<br>由于已经有一年多没有使用hexo了, 我对个这工具的大多数命令已经十分的生疏,有必要复习一下相关的知识了.</p><h2 id="生成静态文件和部署"><a href="#生成静态文件和部署" class="headerlink" title="生成静态文件和部署"></a>生成静态文件和部署</h2><p><code>hexo generate</code>生成<br><code>hexo deploy</code>部署,将会将最新的文件同步到github对应的网站.</p><h2 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h2><p><code>hexo server</code> 在本地生成一个服务器</p><h2 id="新建文章？"><a href="#新建文章？" class="headerlink" title="新建文章？"></a>新建文章？</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure><p>比如用<br><code>hexo new &quot;hexo命令的回顾&quot;</code></p><h3 id="关于标签的使用"><a href="#关于标签的使用" class="headerlink" title="关于标签的使用"></a>关于标签的使用</h3><p>在使用多个标签的时候,需要用使用方括号,格式如下:<br><code>tags: [数学,拓扑学,数学问题]</code></p><h2 id="插入图片？"><a href="#插入图片？" class="headerlink" title="插入图片？"></a>插入图片？</h2><p><img src="/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/logo.png" alt="logo"></p><p>由于之前的设定,我在<code>typora</code>之中插入图片的同时,会自动在当前目录下生成一个文件夹并且将图片复制到其中.</p><p><img src="/2023/10/02/hexo%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9B%9E%E9%A1%BE/1696230712926.png" alt="1696230712926"></p><h2 id="如何更换主题"><a href="#如何更换主题" class="headerlink" title="如何更换主题"></a>如何更换主题</h2><p>在 <code>_config.yml</code> 文件中更改theme关键字后的主题名,比如我用的是仙人掌主题:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><h2 id="如何添加站内搜索"><a href="#如何添加站内搜索" class="headerlink" title="如何添加站内搜索"></a>如何添加站内搜索</h2><p>不同的主题或许配置不尽相同,今天改换用Next主题了.大概的配置是</p><p>安装插件:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save  </span><br></pre></td></tr></table></figure></p><p>然后在主题配置文件下将<code>local_search</code>后面改为<code>true</code>.</p><h2 id="如何添加评论"><a href="#如何添加评论" class="headerlink" title="如何添加评论"></a>如何添加评论</h2><p>使用的是 disqus</p><p>参考:<a href="https://www.jianshu.com/p/d68de067ea74">https://www.jianshu.com/p/d68de067ea74</a></p><p>在主题的配置文件<code>_config.yml</code>中找</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">isqus:</span><br><span class="line">  enable: true</span><br><span class="line">  shortname: dictat</span><br><span class="line">  count: true</span><br><span class="line">  #post_meta_order: 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上下极限和极限关系</title>
      <link href="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/"/>
      <url>/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<p>本篇文章参考了 Ross 的Elementary Analysis 一书,旨在复习数列的上下极限相关的内容.</p><h2 id="上下极限和极限的关系"><a href="#上下极限和极限的关系" class="headerlink" title="上下极限和极限的关系"></a>上下极限和极限的关系</h2><p>所谓数列的上极限和下极限的定义如下:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/697904f8-f5c2-4b9f-a224-53d6e30b4bdb.png" alt="500"></p><p>我们并没有限制数列${s_n}$ 是有限的,也就是说,如果数列是上方无界的,他的上极限就是$+\infty$:</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/a679e331-8b87-4b12-80c2-8fb7325ff0de.png" alt=""></p><p>$a_N = \sup { s_n:n&gt;N }$ 这个数列是递减的.可以看出 $\lim \sup s_n \le \sup{s_n : n \in \mathbb{N} }$.</p><p>下极限小于等于上极限,证明如下:</p><script type="math/tex; mode=display">\begin{align}& s_{n+1} \le \sup \{s_n : n > N \} ()\\& \inf \{s_n : n > N \} \le \sup \{s_n : n > N \}\\&\inf \{s_n : n > N+1 \} \le \lim\sup \{s_n : n > N \}\\&\lim\inf \{s_n : n > N+1 \} \le \lim\sup \{s_n : n > N \}\end{align}</script><p>上下极限和极限有下面关系(<strong>Theorem 10.7</strong>):</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/1ced2a7a-bafc-4993-b77f-84d276f11922.png" alt=""></p><p>即极限确定(一个实数,或是$-\infty$和$+\infty$),则上下极限和极限相同;反之,上下极限相同,则数列的极限确定.</p><p>(1)的证明如下:<br>首先,极限为$\infty$:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/82aa2934-167b-4f02-a9be-7f19ffcc6e77.png" alt=""><br>其次,极限为实数:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/28cc250b-01c8-46d9-9aa3-d038d3c051bb.png" alt=""><br>又因为,下极限小于等于上极限,所以得证.</p><p>(2)的证明如下:</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/fb9a9705-df2a-4fcb-9cd0-f0507b1db253.png" alt=""></p><h2 id="数列上下极限和子列极限的关系"><a href="#数列上下极限和子列极限的关系" class="headerlink" title="数列上下极限和子列极限的关系"></a>数列上下极限和子列极限的关系</h2><h3 id="单调子列逼近上下极限"><a href="#单调子列逼近上下极限" class="headerlink" title="单调子列逼近上下极限:"></a>单调子列逼近上下极限:</h3><p>首先有定理说明了,一定存在一个单调递增的子列,它的极限是上极限,类似可以说明下极限的情况.</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/d96cbf4a-1746-4a89-8ca7-434fb17b02ab.png" alt=""></p><p>首先如果数列无上界,则存在一个趋向正无穷的子列:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/abf8721d-0f03-414b-8e59-ccb29adf2915.png" alt=""><br>这是因为:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/a68cfc4f-12d8-4fb8-8e2d-9c82b1fe4d31.png" alt=""><br>可见这样构造的子列是<strong>单调递增</strong>的,且极限为$+\infty$,此时上极限也为$+\infty$(为什么?).同样的,如果无下界的话,就会有单调的子列极限为$-\infty$.</p><p>我们还有说明的是,如果数列有上界,则也有单调的子列极限为上极限.(同样可以得到有下界时对于下极限的情况.)</p><p>因为有上界,所以上极限是有限实数,设为$t$,</p><p><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/f14671f1-1065-41aa-aa85-c66117cb0e36.png" alt=""></p><h3 id="上下极限和子列极限的关系"><a href="#上下极限和子列极限的关系" class="headerlink" title="上下极限和子列极限的关系"></a>上下极限和子列极限的关系</h3><p>下面的定理说明了,<em>上下极限和子列极限的关系</em>,即子列极限构成的集合$S$非空;$S$的上确界等于上极限,下确界等于下极限;极限存在<strong>当且仅当</strong>$S$中的元素只有一个:<br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/dc035c1c-6a30-4700-89e5-320b0038a56b.png" alt=""><br>证明如下: \<br>(i) 根据上诉的<strong>Theorem 11.7</strong>,知道至少有子列的极限是上下极限,所以$S$ 不为空.\<br>(ii)需要用到<strong>Theorem 10.7</strong><br><img src="/2022/05/14/%E4%B8%8A%E4%B8%8B%E6%9E%81%E9%99%90%E5%92%8C%E6%9E%81%E9%99%90%E5%85%B3%E7%B3%BB/c24d4db0-f8e6-414d-b8f4-41c70f3cefeb.png" alt=""><br>(iii) 由定理<strong>Theorem 10.7</strong>可以得到.</p>]]></content>
      
      
      <categories>
          
          <category> 数学分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析,数列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex的footnote的引用问题</title>
      <link href="/2022/05/05/latex%E7%9A%84footnote%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2022/05/05/latex%E7%9A%84footnote%E7%9A%84%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="主要问题"><a href="#主要问题" class="headerlink" title="主要问题"></a>主要问题</h2><p>在使用latex的<code>\ref</code>引用<code>\footnote</code> 的命令的时候,会发现引用第一个脚注,显示的却是第一个脚注的问题.</p><p>发现问题和这个链接中的问题类似:<a href="https://wenda.latexstudio.net/q-2091.html">使用了自定义数字样式后 footnote 引用错误，请问怎么修复？</a></p><p>根本原因是因为使用了自定义样式的脚注</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>使用以下命令,自定义<code>autoref</code>的脚注命名,这里改成了楷书</p><p><code>\renewcommand&#123;\footnoteautorefname&#125;&#123;\kaishu&#123;脚注&#125;&#125;</code></p><p>使用以下命令,使脚注按章节计数</p><p><code>\counterwithout&#123;footnote&#125;&#123;section&#125;</code></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>使用<code>\ref</code>来引用<code>\footnote</code> 会出现太多的问题了,还得再仔细研究一下.</p><p>最后,latex这个老古董什么时候能被淘汰啊…..</p>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex技巧</title>
      <link href="/2022/05/02/latex%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/05/02/latex%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex分章节独立插入</title>
      <link href="/2022/05/02/latex%E5%88%86%E7%AB%A0%E8%8A%82%E7%8B%AC%E7%AB%8B%E6%8F%92%E5%85%A5/"/>
      <url>/2022/05/02/latex%E5%88%86%E7%AB%A0%E8%8A%82%E7%8B%AC%E7%AB%8B%E6%8F%92%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在使用latex的过程中,我们可以先建立一个主文件,然后使用<code>\include&#123;&#125;</code> 还有<code>\input&#123;&#125;</code> 的方法来插入子文件.譬如插入子文件<code>1.tex</code>,则在正文区中使用<code>\input&#123;1.tex&#125;</code>.</p><p>但是有一个问题是,这样使用的子文件<code>1.tex</code>内容只能是<code>latex正文的格式</code>而不能成为一个独立的可以编译的latex文件,这是十分不便利的(也就是说这个文件只能有<code>\begin&#123;document&#125;...\end&#123;document&#125;</code>之间的内容).</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>使用<code>standalone</code>宏包能够解决这个问题.</p><p><a href="https://tex.stackexchange.com/questions/11311/how-to-include-a-document-into-another-document">参考网页</a></p>]]></content>
      
      
      <categories>
          
          <category> latex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学问题:n维流形的边界是n-1维流形?</title>
      <link href="/2022/04/25/n%E7%BB%B4%E6%B5%81%E5%BD%A2%E7%9A%84%E8%BE%B9%E7%95%8C%E6%98%AFn-1%E7%BB%B4%E6%B5%81%E5%BD%A2/"/>
      <url>/2022/04/25/n%E7%BB%B4%E6%B5%81%E5%BD%A2%E7%9A%84%E8%BE%B9%E7%95%8C%E6%98%AFn-1%E7%BB%B4%E6%B5%81%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<p>来源自<a href="https://math.stackexchange.com/questions/554156/the-boundary-of-an-n-manifold-is-an-n-1-manifold">stackexchange:The boundary of an $n$-manifold is an ($n−1$)-manifold</a></p><h2 id="Question"><a href="#Question" class="headerlink" title="Question:"></a>Question:</h2><blockquote><p> Suppose $M$ is an $n$-dimensional manifold with boundary.<br>Show that the boundary of $M$ is an $(n−1)$-dimensional manifold (without boundary) when endowed with the subspace topology. </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 拓扑学 </tag>
            
            <tag> 数学问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·六:hexo中插入pdf文件和视频的链接</title>
      <link href="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/"/>
      <url>/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="插入pdf文件"><a href="#插入pdf文件" class="headerlink" title="插入pdf文件"></a>插入pdf文件</h2><p>为此我们需要使用一个叫做<code>hexo-pdf</code> 的插件,使用下面代码进行安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-pdf</span><br></pre></td></tr></table></figure><p>在markdown文件中使用下面的语法来引用pdf文件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf ./bash_freshman.pdf %&#125;</span><br></pre></td></tr></table></figure><p>目前测试发现PDF只能放在<code>_post</code>文件夹里用<code>./bash_freshman.pdf</code>来引用,不能放在 <code>_post</code>文件夹下的文件夹里用<code>./文件夹名/bash_freshman.pdf</code>来引用.我觉得这可能是<code>别的插件</code>的原因导致的,这个问题主要就是路径引用的问题,暂时就这样使用了.</p><p>引用网络上的pdf文件,当然不会出现路径问题,语法是:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf https://drive.google.com/file/d/1wK9YbTKEseKdn79fBg7oIyChMehUP1jP/preview %&#125;</span><br></pre></td></tr></table></figure><div class="pdfobject-container" data-target="https://drive.google.com/file/d/1wK9YbTKEseKdn79fBg7oIyChMehUP1jP/preview" data-height="500px"></div><p>这里使用的是谷歌云盘,发现<code>链接末尾</code>得用<code>/preview</code>才行,而用<code>view</code>不行.</p><h2 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h2><h3 id="插入网络视屏"><a href="#插入网络视屏" class="headerlink" title="插入网络视屏"></a>插入网络视屏</h3><p>使用插件:hexo-tag-video</p><p>插件地址:<a href="https://github.com/geekplux/hexo-tag-video">hexo-tag-video下载</a></p><p>使用语法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video &#x27;videoCode&#x27; %&#125;</span><br></pre></td></tr></table></figure><p><code>videoCode</code>是一串代码,在b站可以用下面的方式得到(在分享里)<br><img src="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/1650852624894.png" alt="1650852624894"></p><p>在这里我插入了一个B站的视屏:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video &lt;iframe width=&quot;160&quot; height=&quot;315&quot; src=&quot;https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=..search-card.all.click&quot; frameborder=&quot;0&quot; gesture=&quot;media&quot; allow=&quot;encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt; %&#125;</span><br></pre></td></tr></table></figure><p>效果如下</p><video src="<iframe,src=//player.bilibili.com/player.html?aid=938055170&bvid=BV1zT4y1Y7j7&cid=570809489&page=1,scrolling=no,border=0,frameborder=no,framespacing=0,allowfullscreen=true>,</iframe>" preload="metadata" controls playsinline poster="">Sorry, your browser does not support the video tag.</video><p>下面是不使用插件得到的效果(看来这个插件的主要作用是<code>美化</code>)</p><p><iframe src="//player.bilibili.com/player.html?aid=938055170&bvid=BV1zT4y1Y7j7&cid=570809489&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><br>使用网易云的外链:</p><p><img src="/2022/04/25/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%85%AD/1650853762444.png" alt="1650853762444"></p><p>有一点问题,最后只能在markdown中直接插入<code>videoCode</code>即:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=34144942&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>效果:</p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=34144942&auto=1&height=66"></iframe><br>看来只能用这个插件插入视频链接</p><h3 id="本地视频插入"><a href="#本地视频插入" class="headerlink" title="本地视频插入"></a>本地视频插入</h3><p>找到了方法,使用之前插入图片时候使用的插件<code>hexo-asset-link</code>,但是不支持窗口内部嵌入,只能提供链接在新页面打开<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1650852624894](文件夹名/视屏名.mp4)</span><br></pre></td></tr></table></figure><br>用这个方法也能够提供 <code>pdf</code> 等其他文件的链接.</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·五:hexo主题配置</title>
      <link href="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/"/>
      <url>/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/</url>
      
        <content type="html"><![CDATA[<p>通过配置hexo的主题,可以使得网站的界面更具有艺术性.下面介绍hexo主题配置的一些知识:</p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>在主目录下使用git命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><h2 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h2><p>在主配置文件中<code>_config.yml</code>,将<code>theme: cactus</code>冒号后的部分改成你想要使用的主题(这里用的是<code>cactus</code> 意为仙人掌),主题可以从网上下载,放在<code>themes</code>文件夹里,里面有原有的主题<code>landscape</code>.    </p><p>注:<code>cactus</code> 意为仙人掌</p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>在<code>themes</code>文件夹对应的主题文件夹下,譬如<code>cactus</code>下也有配置文件<code>_config.yml</code>,我们将其称之为<code>主题配置</code>文件,这与<code>主配置</code>文件需要进行区分.</p><h3 id="语言设定"><a href="#语言设定" class="headerlink" title="语言设定"></a>语言设定</h3><p>我们将语言设置为中文,找到主配置文件中的<code>language: zh-CN</code>.(即,改成zh-CN).</p><p>在<code>\cactus\languages</code>中的对应的文件<code>zh-CN.yml</code>中,我们可以设置对应的配置,如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  home: 首页</span><br><span class="line">  about: 关于</span><br><span class="line">  articles: 归档</span><br><span class="line">  projects: 项目</span><br><span class="line">  tag: 标签</span><br><span class="line">  category: 分类</span><br><span class="line">  search: 搜索</span><br></pre></td></tr></table></figure><p>可以将对应的名称DIY成你想要的命名法,比如把<code>search: 搜索</code>改成<code>search: 找一下</code></p><h2 id="导航标签管理"><a href="#导航标签管理" class="headerlink" title="导航标签管理"></a>导航标签管理</h2><p>在<code>主题配置</code>文件中有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  home: /</span><br><span class="line">  about: /about/</span><br><span class="line">  articles: /archives/</span><br><span class="line">  projects: 放一个网站连接</span><br></pre></td></tr></table></figure><p>提供导航(navigation)标签,我们可以自定义想要的标签.</p><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><h4 id="更改’关于’连接"><a href="#更改’关于’连接" class="headerlink" title="更改’关于’连接"></a>更改’关于’连接</h4><p>在下载的<code>cactus</code> 主题中,有<strong>关于</strong>一项</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650770977163.png" alt="1650770977163"></p><p>但是这个页面没有创立,我们要创立一个新的页面,</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650771025794.png" alt="1650771025794"></p><p>可以看出,需要创建的页面的名称是<code>about</code>.</p><p>用下面的命令创建:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>会在<code>\source\about</code>生成一个markdown 文件,修改成你想要的样子即可.</p><h4 id="新建’tags’链接"><a href="#新建’tags’链接" class="headerlink" title="新建’tags’链接"></a>新建’tags’链接</h4><p><a href="https://blog.csdn.net/cflsup/article/details/123452683">参考文章:Hexo添加分类和标签</a></p><p>新建一个页面:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags </span><br></pre></td></tr></table></figure><p> 找到<code>index.md</code>文件 </p><p>将:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-01-07 22:53:43</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2022-01-07 22:53:43</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在启动hexo 效果如下:</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650773499488.png" alt="1650773499488"></p><p>但我们还需要把<code>英文:tags</code> 改成<code>中文:标签</code>,在<code>cactus\languages\zh-CN.yml</code></p><p>中加上<code>tags: 标签</code>即可.</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%94/1650773644718.png" alt="1650773644718"></p><p>大功告成!</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·四:hexo使用markdown语法粘贴图片</title>
      <link href="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%9B%9B/"/>
      <url>/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<p>对于这个问题,我们简要的谈一下.</p><p>要知道在hexo中使用图片的时候不能简单的使用markdown语法,即<code>![这里是名称](这里是图片链接)</code>的方式插入图片,不得不说,这的确是开发者有些懒惰了(hexo居然是一个没有毕业的台湾大学生开发的,那没事了).</p><p>但是智慧(懒惰的)的我们可以在网上寻求答案,也许要踩不可数的坑.</p><p>最后在<a href="https://chrismroberts.com/2020/01/06/using-markdown-in-hexo-to-add-images/">这个链接: Adding Images to Hexo Posts with Markdown </a> 里找到了解决方法,只要在谷歌搜索<code>hexo markdown pic</code>,出现的里面的第一个就是了,叫我们去安装一个插件,用下面的代码.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -s hexo-asset-link</span><br></pre></td></tr></table></figure><p>然后修改<code>_config.yml</code>中的<code>post_asset_folder: true</code>(改掉false)</p><p>在这里我们需要吸取的教训就是:</p><ol><li>即使是同一个名字的插件,也有可能是不同效果的(有些是个人修改版,需要甄别<strong>安装源</strong>)</li><li>要尽量挑比较新的文章看.</li></ol><p>我用这篇文章的时候就没有安装成功:<a href="https://zhuanlan.zhihu.com/p/280758822?utm_source=qq">hexo博客显示markdown路径的图片</a><br>就可能是安装源的问题.</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·三:绑定本地hexo到github站点</title>
      <link href="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/"/>
      <url>/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<p>现在我们已经在本地搭建了hexo站点,并且可以在本地访问访问,接下来要做的就是把这个网站传到云端,这里我们借助github给我们提供的免费站点.</p><p>一般来说,对于这个问题网上有详细的教程(搜索:hexo+github博客搭建):</p><ol><li>建立github网站项目,成功之后会生成一个初始的静态网站,这方面的知识完全可以参考 <a href="https://docs.github.com/cn/pages/quickstart">官方教程:GitHub Pages 快速入门</a></li></ol><p>得到了类似这样的一个页面：    </p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/1.png" alt="1650637781304"></p><ol><li>需要安装 git 生成连接github网站秘钥,用于下面的部署操作.</li></ol><p>在这里我来说一个遇到的大坑,</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/wapchief/wapchief.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在传输到云端上(称之为<strong>部署</strong>)之前,我们需要修改hexo项目文件夹下的主配置文件<code>_config.yml</code>,添加上面一段文字.</p><p>才开始的时候我不知道<code>branch: master</code> 是什么意思,导致网站一直没有显示出来,</p><p><img src="/2022/04/24/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%89/1650766184876.png" alt="1650766184876"></p><p>如图所示,图中有两个branch,我们部署的是master分支,而原来生成网页时候在<code>setting-pages</code>里用的的是main分支,需要改变一下.</p><p>此外,由于github访问速度的原因,部署需要一些时间才能生效.</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·二:hexo博客搭建</title>
      <link href="/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/"/>
      <url>/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p>在这篇文章中主要介绍两个方面的内容,docsify还有hexo,其中主要介绍后者.前者的主要是起到一个书写说明文档(例如对某个package的说明)的作用,而后者才是有关于个人静态博客的搭建.</p><h1 id="docsify入门"><a href="#docsify入门" class="headerlink" title="docsify入门"></a>docsify入门</h1><p>首先我们试着在window中使用docsify:</p><h2 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h2><p>参考 <a href="https://blog.csdn.net/jiahao1186/article/details/121878532">网页:windows下安装node.js</a> </p><p>参考<a href="https://segmentfault.com/a/1190000039973959">网页:Linux下安装node.js</a></p><p>安装以后配置环境变量,如果没有生效的话就重启一下.</p><h2 id="安装-docsify"><a href="#安装-docsify" class="headerlink" title="安装 docsify"></a>安装 docsify</h2><p>确保已经安装了 nodejs 和 Git</p><p>参考 <a href="https://blog.csdn.net/qq_31848763/article/details/112368252">网页:Windows中使用 docsify</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在cmd窗口输入:npm install docsify-cli -g</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在cmd窗口 使用docsify初始化命令：docsify init ./docs</span><br><span class="line">在cmd窗口 运行本地服务器：docsify serve ./docs</span><br><span class="line">在通过http://localhost:3000/访问本地服务器</span><br></pre></td></tr></table></figure><h3 id="npm-使用镜像"><a href="#npm-使用镜像" class="headerlink" title="npm 使用镜像"></a>npm 使用镜像</h3><p>npm 命令在国内使用可能会比较慢,所以可以替换成国内的镜像网站源:</p><p>参考 <a href="https://blog.csdn.net/weixin_44816439/article/details/115396762">npm install卡慢解决方案</a></p><h2 id="使用-docsify"><a href="#使用-docsify" class="headerlink" title="使用 docsify"></a>使用 docsify</h2><h2 id="本地的测试"><a href="#本地的测试" class="headerlink" title="本地的测试"></a>本地的测试</h2><h2 id="docsify-Nginx搭建个人知识库"><a href="#docsify-Nginx搭建个人知识库" class="headerlink" title="docsify+Nginx搭建个人知识库"></a>docsify+Nginx搭建个人知识库</h2><p>参考<a href="https://zhuanlan.zhihu.com/p/461419869">docsify+Nginx搭建个人知识库</a></p><p>这个我们暂时不谈,因为现在还不做需要做文档说明.</p><h1 id="hexo-使用"><a href="#hexo-使用" class="headerlink" title="hexo 使用"></a>hexo 使用</h1><p>参考网页:<a href="https://blog.csdn.net/weixin_44075537/article/details/109901284">Windows系统hexo安装教程</a></p><p>按照这个网页的流程走下来,能够创建一个hexo的模板页面出来,大概的现实效果是这样子的:</p><p><img src="/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/7d593d44-91f5-42a7-9100-88df3601b4f6.png" alt=""></p><p>当然后面可以替换主题模板,这里是原装的landscape而我替换成了next.效果如下:</p><p>效果如下:</p><p><img src="/2022/04/23/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%BA%8C/f69a051e-f34d-41a1-9f8a-b63dbcb9347e.png" alt=""></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>参考<a href="https://blog.csdn.net/dxxzst/article/details/76135935">Hexo 最常用的几个命令</a></p><p>查看版本: <code>hexo -v</code></p><p>打开hexo:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><ul><li>hexo g 是 hexo generate 的缩写，命令效果一致。</li></ul><p>启动的话似乎只需要用的<code>hexo g</code></p><p>新建一个标题为 aboutme 的页面，默认链接地址为 主页地址/aboutme/</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page aboutme</span><br></pre></td></tr></table></figure><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="https://hexo.io/zh-cn/docs/writing">链接</a></p><p>在hexo中使用数学公式才是大坑,这占用了我大量的时间.</p><h2 id="hexo-中使用数学公式"><a href="#hexo-中使用数学公式" class="headerlink" title="hexo 中使用数学公式"></a>hexo 中使用数学公式</h2><p>参考文章<a href="https://blog.csdn.net/qq_38496329/article/details/104065659">Hexo博客支持数学公式</a></p><p>我发现根据他的提示不行,只好作罢了….,以后在提数学公式的事情吧.或许还有弄清楚hexo 的配置文件的问题.(有时候数学公式会没有刷新,可能是mathjax 的原因)</p><p>最后在这位兄弟的博客上面找到了有用的回答 <a href="https://qingstudios.com/2020/03/01/Hexo%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/">如何在Hexo中插入数学公式</a></p><p>接下来要做的?</p><p>接下来我们要把本地做好的网站放到互联网上,这就需要用到服务器还有域名了,但是我们不这样做,我们用现成的github给我们提供的域名.</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学测试</title>
      <link href="/2022/04/22/%E6%95%B0%E5%AD%A6%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/04/22/%E6%95%B0%E5%AD%A6%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>还不错</p><p>$a_1$</p>]]></content>
      
      
      
        <tags>
            
            <tag> 拓扑学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站建立其·一:域名的购买和Nginx 初步</title>
      <link href="/2022/04/22/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%80/"/>
      <url>/2022/04/22/%E7%BD%91%E7%AB%99%E5%BB%BA%E7%AB%8B%E5%85%B6%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>最近因为疫情和封校的缘故,在拼夕夕上买的游戏卡带迟迟没有发货,于是在网上无聊买了一个域名(www.<em>*</em>.com,我后来发现其实可以直接用服务器加端口登录,只要安装了Nginx就行了,实在是血亏,域名大抵只有好看的作用吧!!!),花了十五元(一年的使用权)…..</p><p>以前也买过,但是在国内买域名的话,似乎需要实名认证,这就有些麻烦了,比如在阿里云上面买域名,就会有人过来问你买这个要做些什么啊?这就十分的麻烦,我要做什么和他们有什么关系,所以不如买国外的域名和服务器,清闲自在.</p><p>然后再去阿里云上搞了一个免费的服务器,只有两个星期的使用期,就这个试用期还要答题,或许国内的商家才喜欢做这种无聊的事情,仿佛大家的时间十分的廉价似的.</p><p>下面讲 Nginx 使用过程中的大坑,全部都是阿里云引起的:</p><ol><li>端口没有开放</li></ol><p>因为这个原因,网页总是打不开!!!我还以为是Nginx没有启动.</p><ol><li>域名需要备案</li></ol><p>如果你使用阿里云的服务器(或许国内的服务器都有这样的矛盾),绑定的是国外的域名,你在网页上访问自己的网站是打不开的,会跳出来一个叫你去备案的链接….</p><p>Nginx 说到底,我也不知道是干啥的,但是我知道类似的东西有tomcat ,Apache ,貌似是一个叫 <strong>web服务器</strong>的东西.</p><p>我们写几个.html 文件放在到某个制定的文件夹里,然后更改Nginx 的设定,就能在浏览器上查看这些内容了.</p><p>当然现在以我的能力,实在是不能写出什么漂亮的东西,而且这些只是静态网页罢了,就好像是ppt,访问者只能看不能写,为了更加高级的交互性,可能还需要<strong>数据库</strong>的知识.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 用vim修改配置文件nginx.conf </span><br><span class="line">vim  /etc/nginx/conf/nginx.conf </span><br><span class="line"># 重新加载配置文件</span><br><span class="line">/etc/nginx/sbin/nginx  -s reload </span><br><span class="line"># 查看配置文件是否成功</span><br><span class="line">/etc/nginx/sbin/nginx  -t</span><br></pre></td></tr></table></figure><p>注意我的nginx 是在 <code>/etc/nginx/sbin/nginx</code> 这个位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#编辑主页面</span><br><span class="line">vim /etc/nginx/html/index.html</span><br></pre></td></tr></table></figure><p>所谓的主界面就是,打开域名的时候会见到的那个页面,在<code>vim /etc/nginx/html/</code>文件夹下.</p><p>如果你在windows 系统下载一个Nginx ,然后运行,在浏览器里输入:<code>http://localhost</code> 就会显示成功启动的初始主界面.可以修改打开的端口比如变成</p><p><code>http://localhost:81</code>.</p><p>最后,本人抱着实用主义,对所用的知识无需理解,只要会用就行.(p.s. 除了哲学还有比较基础的数学.)</p>]]></content>
      
      
      <categories>
          
          <category> hexo博客建立 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站建立 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
